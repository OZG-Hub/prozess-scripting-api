// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form.validator;

import de.seitenbau.serviceportal.scripting.api.v1.form.FormFieldKeyV1;

/**
 * Abstrakte Elternklasse f端r Validierungsregeln, die auf ein Feld referenzieren.
 */
public abstract class ConditionalFieldValidationRuleV1 extends ValidationRuleV1 {
  /**
   * Schl端ssel des Feldes, auf das sich die Validierungsregel bezieht.
   */
  private FormFieldKeyV1 sourceFieldKey;


  @SuppressWarnings("all")
  public static abstract class ConditionalFieldValidationRuleV1Builder<C extends ConditionalFieldValidationRuleV1, B extends ConditionalFieldValidationRuleV1.ConditionalFieldValidationRuleV1Builder<C, B>> extends ValidationRuleV1.ValidationRuleV1Builder<C, B> {
    @SuppressWarnings("all")
    private FormFieldKeyV1 sourceFieldKey;

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public B sourceFieldKey(final FormFieldKeyV1 sourceFieldKey) {
      this.sourceFieldKey = sourceFieldKey;
      return self();
    }

    @Override
    @SuppressWarnings("all")
    protected abstract B self();

    @Override
    @SuppressWarnings("all")
    public abstract C build();

    @Override
    @SuppressWarnings("all")
    public String toString() {
      return "ConditionalFieldValidationRuleV1.ConditionalFieldValidationRuleV1Builder(super=" + super.toString() + ", sourceFieldKey=" + this.sourceFieldKey + ")";
    }
  }

  @SuppressWarnings("all")
  protected ConditionalFieldValidationRuleV1(final ConditionalFieldValidationRuleV1.ConditionalFieldValidationRuleV1Builder<?, ?> b) {
    super(b);
    this.sourceFieldKey = b.sourceFieldKey;
  }

  /**
   * Schl端ssel des Feldes, auf das sich die Validierungsregel bezieht.
   */
  @SuppressWarnings("all")
  public FormFieldKeyV1 getSourceFieldKey() {
    return this.sourceFieldKey;
  }

  /**
   * Schl端ssel des Feldes, auf das sich die Validierungsregel bezieht.
   */
  @SuppressWarnings("all")
  public void setSourceFieldKey(final FormFieldKeyV1 sourceFieldKey) {
    this.sourceFieldKey = sourceFieldKey;
  }

  @Override
  @SuppressWarnings("all")
  public String toString() {
    return "ConditionalFieldValidationRuleV1(sourceFieldKey=" + this.getSourceFieldKey() + ")";
  }

  @Override
  @SuppressWarnings("all")
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof ConditionalFieldValidationRuleV1)) return false;
    final ConditionalFieldValidationRuleV1 other = (ConditionalFieldValidationRuleV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$sourceFieldKey = this.getSourceFieldKey();
    final Object other$sourceFieldKey = other.getSourceFieldKey();
    if (this$sourceFieldKey == null ? other$sourceFieldKey != null : !this$sourceFieldKey.equals(other$sourceFieldKey)) return false;
    return true;
  }

  @SuppressWarnings("all")
  protected boolean canEqual(final Object other) {
    return other instanceof ConditionalFieldValidationRuleV1;
  }

  @Override
  @SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $sourceFieldKey = this.getSourceFieldKey();
    result = result * PRIME + ($sourceFieldKey == null ? 43 : $sourceFieldKey.hashCode());
    return result;
  }
}
