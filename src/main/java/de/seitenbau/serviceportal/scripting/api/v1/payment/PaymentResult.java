// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.payment;

import java.io.Serializable;

/**
 * Ergebnis-Typ vom generischen Bezahltask.
 */
public class PaymentResult implements Serializable {
  private static final long serialVersionUID = 1L;
  /**
   * Gezahlter Geldbetrag in Cents.
   */
  private long betrag;
  /**
   * Kassenzeichen der Bezahlung.
   */
  private String kassenzeichen;
  /**
   * Bezahlverfahren der Bezahlung.
   */
  private String bezahlverfahren;


  @SuppressWarnings("all")
  public static class PaymentResultBuilder {
    @SuppressWarnings("all")
    private long betrag;
    @SuppressWarnings("all")
    private String kassenzeichen;
    @SuppressWarnings("all")
    private String bezahlverfahren;

    @SuppressWarnings("all")
    PaymentResultBuilder() {
    }

    /**
     * Gezahlter Geldbetrag in Cents.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public PaymentResult.PaymentResultBuilder betrag(final long betrag) {
      this.betrag = betrag;
      return this;
    }

    /**
     * Kassenzeichen der Bezahlung.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public PaymentResult.PaymentResultBuilder kassenzeichen(final String kassenzeichen) {
      this.kassenzeichen = kassenzeichen;
      return this;
    }

    /**
     * Bezahlverfahren der Bezahlung.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public PaymentResult.PaymentResultBuilder bezahlverfahren(final String bezahlverfahren) {
      this.bezahlverfahren = bezahlverfahren;
      return this;
    }

    @SuppressWarnings("all")
    public PaymentResult build() {
      return new PaymentResult(this.betrag, this.kassenzeichen, this.bezahlverfahren);
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
      return "PaymentResult.PaymentResultBuilder(betrag=" + this.betrag + ", kassenzeichen=" + this.kassenzeichen + ", bezahlverfahren=" + this.bezahlverfahren + ")";
    }
  }

  @SuppressWarnings("all")
  public static PaymentResult.PaymentResultBuilder builder() {
    return new PaymentResult.PaymentResultBuilder();
  }

  /**
   * Gezahlter Geldbetrag in Cents.
   */
  @SuppressWarnings("all")
  public long getBetrag() {
    return this.betrag;
  }

  /**
   * Kassenzeichen der Bezahlung.
   */
  @SuppressWarnings("all")
  public String getKassenzeichen() {
    return this.kassenzeichen;
  }

  /**
   * Bezahlverfahren der Bezahlung.
   */
  @SuppressWarnings("all")
  public String getBezahlverfahren() {
    return this.bezahlverfahren;
  }

  /**
   * Gezahlter Geldbetrag in Cents.
   */
  @SuppressWarnings("all")
  public void setBetrag(final long betrag) {
    this.betrag = betrag;
  }

  /**
   * Kassenzeichen der Bezahlung.
   */
  @SuppressWarnings("all")
  public void setKassenzeichen(final String kassenzeichen) {
    this.kassenzeichen = kassenzeichen;
  }

  /**
   * Bezahlverfahren der Bezahlung.
   */
  @SuppressWarnings("all")
  public void setBezahlverfahren(final String bezahlverfahren) {
    this.bezahlverfahren = bezahlverfahren;
  }

  @Override
  @SuppressWarnings("all")
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof PaymentResult)) return false;
    final PaymentResult other = (PaymentResult) o;
    if (!other.canEqual((Object) this)) return false;
    if (this.getBetrag() != other.getBetrag()) return false;
    final Object this$kassenzeichen = this.getKassenzeichen();
    final Object other$kassenzeichen = other.getKassenzeichen();
    if (this$kassenzeichen == null ? other$kassenzeichen != null : !this$kassenzeichen.equals(other$kassenzeichen)) return false;
    final Object this$bezahlverfahren = this.getBezahlverfahren();
    final Object other$bezahlverfahren = other.getBezahlverfahren();
    if (this$bezahlverfahren == null ? other$bezahlverfahren != null : !this$bezahlverfahren.equals(other$bezahlverfahren)) return false;
    return true;
  }

  @SuppressWarnings("all")
  protected boolean canEqual(final Object other) {
    return other instanceof PaymentResult;
  }

  @Override
  @SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final long $betrag = this.getBetrag();
    result = result * PRIME + (int) ($betrag >>> 32 ^ $betrag);
    final Object $kassenzeichen = this.getKassenzeichen();
    result = result * PRIME + ($kassenzeichen == null ? 43 : $kassenzeichen.hashCode());
    final Object $bezahlverfahren = this.getBezahlverfahren();
    result = result * PRIME + ($bezahlverfahren == null ? 43 : $bezahlverfahren.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  public String toString() {
    return "PaymentResult(betrag=" + this.getBetrag() + ", kassenzeichen=" + this.getKassenzeichen() + ", bezahlverfahren=" + this.getBezahlverfahren() + ")";
  }

  @SuppressWarnings("all")
  public PaymentResult() {
  }

  @SuppressWarnings("all")
  public PaymentResult(final long betrag, final String kassenzeichen, final String bezahlverfahren) {
    this.betrag = betrag;
    this.kassenzeichen = kassenzeichen;
    this.bezahlverfahren = bezahlverfahren;
  }
}
