// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.fitconnect;

import java.util.List;

/**
 * Objekt zum Konfigurieren der Rückkanalkommunikation beim Versand von Einreichungen über Fit-Connect, via
 * FitConnectSubmissionService. Hiermit kann signalisiert werden, dass der Prozess den Rückkanal per
 * Fit-Connect unterstützt und nutzen möchte.
 *
 * @see <a href="https://docs.fitko.de/fit-connect/docs/organisation-tasks/bidiko-verantwortliche">Fit-Connect
 * Dokumentation</a>
 */
public class FitConnectReplyChannelV1 {
  /**
   * Liste von eindeutigen Referenzen auf den zu verwendenden Datenaustauschstandard
   * (einschließlich der Version) mittels der offiziellen URI des Datenaustauschstandards. Zum Beispiel
   * <code>urn:xoev-de:bmk:standard:xbau_2.4</code>.
   * <br />
   * Die Liste muss mindestens ein Element enthalten, damit es am FitConnectSubmissionService verwendet
   * werden kann.
   */
  private List<String> processStandards;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class FitConnectReplyChannelV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private List<String> processStandards;

    @SuppressWarnings("all")
    @lombok.Generated
    FitConnectReplyChannelV1Builder() {
    }

    /**
     * Liste von eindeutigen Referenzen auf den zu verwendenden Datenaustauschstandard
     * (einschließlich der Version) mittels der offiziellen URI des Datenaustauschstandards. Zum Beispiel
     * <code>urn:xoev-de:bmk:standard:xbau_2.4</code>.
     * <br />
     * Die Liste muss mindestens ein Element enthalten, damit es am FitConnectSubmissionService verwendet
     * werden kann.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectReplyChannelV1.FitConnectReplyChannelV1Builder processStandards(final List<String> processStandards) {
      this.processStandards = processStandards;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectReplyChannelV1 build() {
      return new FitConnectReplyChannelV1(this.processStandards);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FitConnectReplyChannelV1.FitConnectReplyChannelV1Builder(processStandards=" + this.processStandards + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FitConnectReplyChannelV1.FitConnectReplyChannelV1Builder builder() {
    return new FitConnectReplyChannelV1.FitConnectReplyChannelV1Builder();
  }

  /**
   * Liste von eindeutigen Referenzen auf den zu verwendenden Datenaustauschstandard
   * (einschließlich der Version) mittels der offiziellen URI des Datenaustauschstandards. Zum Beispiel
   * <code>urn:xoev-de:bmk:standard:xbau_2.4</code>.
   * <br />
   * Die Liste muss mindestens ein Element enthalten, damit es am FitConnectSubmissionService verwendet
   * werden kann.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public List<String> getProcessStandards() {
    return this.processStandards;
  }

  /**
   * Liste von eindeutigen Referenzen auf den zu verwendenden Datenaustauschstandard
   * (einschließlich der Version) mittels der offiziellen URI des Datenaustauschstandards. Zum Beispiel
   * <code>urn:xoev-de:bmk:standard:xbau_2.4</code>.
   * <br />
   * Die Liste muss mindestens ein Element enthalten, damit es am FitConnectSubmissionService verwendet
   * werden kann.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setProcessStandards(final List<String> processStandards) {
    this.processStandards = processStandards;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FitConnectReplyChannelV1)) return false;
    final FitConnectReplyChannelV1 other = (FitConnectReplyChannelV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$processStandards = this.getProcessStandards();
    final Object other$processStandards = other.getProcessStandards();
    if (this$processStandards == null ? other$processStandards != null : !this$processStandards.equals(other$processStandards)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FitConnectReplyChannelV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $processStandards = this.getProcessStandards();
    result = result * PRIME + ($processStandards == null ? 43 : $processStandards.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FitConnectReplyChannelV1(processStandards=" + this.getProcessStandards() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectReplyChannelV1() {
  }

  /**
   * Creates a new {@code FitConnectReplyChannelV1} instance.
   *
   * @param processStandards Liste von eindeutigen Referenzen auf den zu verwendenden Datenaustauschstandard
   * (einschließlich der Version) mittels der offiziellen URI des Datenaustauschstandards. Zum Beispiel
   * <code>urn:xoev-de:bmk:standard:xbau_2.4</code>.
   * <br />
   * Die Liste muss mindestens ein Element enthalten, damit es am FitConnectSubmissionService verwendet
   * werden kann.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectReplyChannelV1(final List<String> processStandards) {
    this.processStandards = processStandards;
  }
}
