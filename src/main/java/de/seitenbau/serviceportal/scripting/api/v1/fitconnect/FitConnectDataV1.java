// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.fitconnect;

public class FitConnectDataV1 {
  private FitConnectSignatureV1 signature;
  private FitConnectHashV1 hash;
  private FitConnectSubmissionSchemaV1 submissionSchema;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class FitConnectDataV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectSignatureV1 signature;
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectHashV1 hash;
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectSubmissionSchemaV1 submissionSchema;

    @SuppressWarnings("all")
    @lombok.Generated
    FitConnectDataV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectDataV1.FitConnectDataV1Builder signature(final FitConnectSignatureV1 signature) {
      this.signature = signature;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectDataV1.FitConnectDataV1Builder hash(final FitConnectHashV1 hash) {
      this.hash = hash;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectDataV1.FitConnectDataV1Builder submissionSchema(final FitConnectSubmissionSchemaV1 submissionSchema) {
      this.submissionSchema = submissionSchema;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectDataV1 build() {
      return new FitConnectDataV1(this.signature, this.hash, this.submissionSchema);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FitConnectDataV1.FitConnectDataV1Builder(signature=" + this.signature + ", hash=" + this.hash + ", submissionSchema=" + this.submissionSchema + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FitConnectDataV1.FitConnectDataV1Builder builder() {
    return new FitConnectDataV1.FitConnectDataV1Builder();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectSignatureV1 getSignature() {
    return this.signature;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectHashV1 getHash() {
    return this.hash;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectSubmissionSchemaV1 getSubmissionSchema() {
    return this.submissionSchema;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setSignature(final FitConnectSignatureV1 signature) {
    this.signature = signature;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setHash(final FitConnectHashV1 hash) {
    this.hash = hash;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setSubmissionSchema(final FitConnectSubmissionSchemaV1 submissionSchema) {
    this.submissionSchema = submissionSchema;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FitConnectDataV1)) return false;
    final FitConnectDataV1 other = (FitConnectDataV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$signature = this.getSignature();
    final Object other$signature = other.getSignature();
    if (this$signature == null ? other$signature != null : !this$signature.equals(other$signature)) return false;
    final Object this$hash = this.getHash();
    final Object other$hash = other.getHash();
    if (this$hash == null ? other$hash != null : !this$hash.equals(other$hash)) return false;
    final Object this$submissionSchema = this.getSubmissionSchema();
    final Object other$submissionSchema = other.getSubmissionSchema();
    if (this$submissionSchema == null ? other$submissionSchema != null : !this$submissionSchema.equals(other$submissionSchema)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FitConnectDataV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $signature = this.getSignature();
    result = result * PRIME + ($signature == null ? 43 : $signature.hashCode());
    final Object $hash = this.getHash();
    result = result * PRIME + ($hash == null ? 43 : $hash.hashCode());
    final Object $submissionSchema = this.getSubmissionSchema();
    result = result * PRIME + ($submissionSchema == null ? 43 : $submissionSchema.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FitConnectDataV1(signature=" + this.getSignature() + ", hash=" + this.getHash() + ", submissionSchema=" + this.getSubmissionSchema() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectDataV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectDataV1(final FitConnectSignatureV1 signature, final FitConnectHashV1 hash, final FitConnectSubmissionSchemaV1 submissionSchema) {
    this.signature = signature;
    this.hash = hash;
    this.submissionSchema = submissionSchema;
  }
}
