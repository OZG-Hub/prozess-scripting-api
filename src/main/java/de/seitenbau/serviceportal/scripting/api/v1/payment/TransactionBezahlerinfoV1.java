// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.payment;

/**
 * Informationen über den Auslöser der Bezahlung.
 */
public class TransactionBezahlerinfoV1 {
  /**
   * Nachname.
   */
  private String name;
  /**
   * Vorname.
   */
  private String vorname;
  /**
   * Geschlecht.
   */
  private GeschlechtV1 geschlecht;
  /**
   * {@code true}, wenn der Auslöser der Bezahlung eine Organisation oder juristische Person ist.
   */
  private Boolean isOrganisation;
  /**
   * Name der Organisation, wenn der Auslöser der Bezahlung eine Organisation ist.
   */
  private String organisationName;
  /**
   * Adressinformationen.
   */
  private TransactionAdresseV1 adresse;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class TransactionBezahlerinfoV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private String name;
    @SuppressWarnings("all")
    @lombok.Generated
    private String vorname;
    @SuppressWarnings("all")
    @lombok.Generated
    private GeschlechtV1 geschlecht;
    @SuppressWarnings("all")
    @lombok.Generated
    private Boolean isOrganisation;
    @SuppressWarnings("all")
    @lombok.Generated
    private String organisationName;
    @SuppressWarnings("all")
    @lombok.Generated
    private TransactionAdresseV1 adresse;

    @SuppressWarnings("all")
    @lombok.Generated
    TransactionBezahlerinfoV1Builder() {
    }

    /**
     * Nachname.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder name(final String name) {
      this.name = name;
      return this;
    }

    /**
     * Vorname.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder vorname(final String vorname) {
      this.vorname = vorname;
      return this;
    }

    /**
     * Geschlecht.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder geschlecht(final GeschlechtV1 geschlecht) {
      this.geschlecht = geschlecht;
      return this;
    }

    /**
     * {@code true}, wenn der Auslöser der Bezahlung eine Organisation oder juristische Person ist.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder isOrganisation(final Boolean isOrganisation) {
      this.isOrganisation = isOrganisation;
      return this;
    }

    /**
     * Name der Organisation, wenn der Auslöser der Bezahlung eine Organisation ist.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder organisationName(final String organisationName) {
      this.organisationName = organisationName;
      return this;
    }

    /**
     * Adressinformationen.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder adresse(final TransactionAdresseV1 adresse) {
      this.adresse = adresse;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public TransactionBezahlerinfoV1 build() {
      return new TransactionBezahlerinfoV1(this.name, this.vorname, this.geschlecht, this.isOrganisation, this.organisationName, this.adresse);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder(name=" + this.name + ", vorname=" + this.vorname + ", geschlecht=" + this.geschlecht + ", isOrganisation=" + this.isOrganisation + ", organisationName=" + this.organisationName + ", adresse=" + this.adresse + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder builder() {
    return new TransactionBezahlerinfoV1.TransactionBezahlerinfoV1Builder();
  }

  /**
   * Nachname.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getName() {
    return this.name;
  }

  /**
   * Vorname.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getVorname() {
    return this.vorname;
  }

  /**
   * Geschlecht.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public GeschlechtV1 getGeschlecht() {
    return this.geschlecht;
  }

  /**
   * {@code true}, wenn der Auslöser der Bezahlung eine Organisation oder juristische Person ist.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public Boolean getIsOrganisation() {
    return this.isOrganisation;
  }

  /**
   * Name der Organisation, wenn der Auslöser der Bezahlung eine Organisation ist.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getOrganisationName() {
    return this.organisationName;
  }

  /**
   * Adressinformationen.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public TransactionAdresseV1 getAdresse() {
    return this.adresse;
  }

  /**
   * Nachname.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setName(final String name) {
    this.name = name;
  }

  /**
   * Vorname.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setVorname(final String vorname) {
    this.vorname = vorname;
  }

  /**
   * Geschlecht.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setGeschlecht(final GeschlechtV1 geschlecht) {
    this.geschlecht = geschlecht;
  }

  /**
   * {@code true}, wenn der Auslöser der Bezahlung eine Organisation oder juristische Person ist.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setIsOrganisation(final Boolean isOrganisation) {
    this.isOrganisation = isOrganisation;
  }

  /**
   * Name der Organisation, wenn der Auslöser der Bezahlung eine Organisation ist.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setOrganisationName(final String organisationName) {
    this.organisationName = organisationName;
  }

  /**
   * Adressinformationen.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setAdresse(final TransactionAdresseV1 adresse) {
    this.adresse = adresse;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof TransactionBezahlerinfoV1)) return false;
    final TransactionBezahlerinfoV1 other = (TransactionBezahlerinfoV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$isOrganisation = this.getIsOrganisation();
    final Object other$isOrganisation = other.getIsOrganisation();
    if (this$isOrganisation == null ? other$isOrganisation != null : !this$isOrganisation.equals(other$isOrganisation)) return false;
    final Object this$name = this.getName();
    final Object other$name = other.getName();
    if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
    final Object this$vorname = this.getVorname();
    final Object other$vorname = other.getVorname();
    if (this$vorname == null ? other$vorname != null : !this$vorname.equals(other$vorname)) return false;
    final Object this$geschlecht = this.getGeschlecht();
    final Object other$geschlecht = other.getGeschlecht();
    if (this$geschlecht == null ? other$geschlecht != null : !this$geschlecht.equals(other$geschlecht)) return false;
    final Object this$organisationName = this.getOrganisationName();
    final Object other$organisationName = other.getOrganisationName();
    if (this$organisationName == null ? other$organisationName != null : !this$organisationName.equals(other$organisationName)) return false;
    final Object this$adresse = this.getAdresse();
    final Object other$adresse = other.getAdresse();
    if (this$adresse == null ? other$adresse != null : !this$adresse.equals(other$adresse)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof TransactionBezahlerinfoV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $isOrganisation = this.getIsOrganisation();
    result = result * PRIME + ($isOrganisation == null ? 43 : $isOrganisation.hashCode());
    final Object $name = this.getName();
    result = result * PRIME + ($name == null ? 43 : $name.hashCode());
    final Object $vorname = this.getVorname();
    result = result * PRIME + ($vorname == null ? 43 : $vorname.hashCode());
    final Object $geschlecht = this.getGeschlecht();
    result = result * PRIME + ($geschlecht == null ? 43 : $geschlecht.hashCode());
    final Object $organisationName = this.getOrganisationName();
    result = result * PRIME + ($organisationName == null ? 43 : $organisationName.hashCode());
    final Object $adresse = this.getAdresse();
    result = result * PRIME + ($adresse == null ? 43 : $adresse.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "TransactionBezahlerinfoV1(name=" + this.getName() + ", vorname=" + this.getVorname() + ", geschlecht=" + this.getGeschlecht() + ", isOrganisation=" + this.getIsOrganisation() + ", organisationName=" + this.getOrganisationName() + ", adresse=" + this.getAdresse() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public TransactionBezahlerinfoV1() {
  }

  /**
   * Creates a new {@code TransactionBezahlerinfoV1} instance.
   *
   * @param name Nachname.
   * @param vorname Vorname.
   * @param geschlecht Geschlecht.
   * @param isOrganisation {@code true}, wenn der Auslöser der Bezahlung eine Organisation oder juristische Person ist.
   * @param organisationName Name der Organisation, wenn der Auslöser der Bezahlung eine Organisation ist.
   * @param adresse Adressinformationen.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public TransactionBezahlerinfoV1(final String name, final String vorname, final GeschlechtV1 geschlecht, final Boolean isOrganisation, final String organisationName, final TransactionAdresseV1 adresse) {
    this.name = name;
    this.vorname = vorname;
    this.geschlecht = geschlecht;
    this.isOrganisation = isOrganisation;
    this.organisationName = organisationName;
    this.adresse = adresse;
  }
}
