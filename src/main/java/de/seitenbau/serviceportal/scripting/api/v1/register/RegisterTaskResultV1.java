// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.register;

import java.util.List;

/**
 * Dieses Objekt ist experimentell und kann sich noch verändern!
 * Ergebnis des Register Tasks
 */
public class RegisterTaskResultV1 {
  /**
   * Liste der abgerufenen Nachweise.
   */
  private List<RegisterItemV1> registerItems;
  /**
   * ob die Durchführung des Registeraufrufs erfolgreich war
   */
  private boolean successful;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class RegisterTaskResultV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private List<RegisterItemV1> registerItems;
    @SuppressWarnings("all")
    @lombok.Generated
    private boolean successful;

    @SuppressWarnings("all")
    @lombok.Generated
    RegisterTaskResultV1Builder() {
    }

    /**
     * Liste der abgerufenen Nachweise.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public RegisterTaskResultV1.RegisterTaskResultV1Builder registerItems(final List<RegisterItemV1> registerItems) {
      this.registerItems = registerItems;
      return this;
    }

    /**
     * ob die Durchführung des Registeraufrufs erfolgreich war
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public RegisterTaskResultV1.RegisterTaskResultV1Builder successful(final boolean successful) {
      this.successful = successful;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public RegisterTaskResultV1 build() {
      return new RegisterTaskResultV1(this.registerItems, this.successful);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "RegisterTaskResultV1.RegisterTaskResultV1Builder(registerItems=" + this.registerItems + ", successful=" + this.successful + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static RegisterTaskResultV1.RegisterTaskResultV1Builder builder() {
    return new RegisterTaskResultV1.RegisterTaskResultV1Builder();
  }

  /**
   * Liste der abgerufenen Nachweise.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public List<RegisterItemV1> getRegisterItems() {
    return this.registerItems;
  }

  /**
   * ob die Durchführung des Registeraufrufs erfolgreich war
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean isSuccessful() {
    return this.successful;
  }

  /**
   * Liste der abgerufenen Nachweise.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setRegisterItems(final List<RegisterItemV1> registerItems) {
    this.registerItems = registerItems;
  }

  /**
   * ob die Durchführung des Registeraufrufs erfolgreich war
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setSuccessful(final boolean successful) {
    this.successful = successful;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof RegisterTaskResultV1)) return false;
    final RegisterTaskResultV1 other = (RegisterTaskResultV1) o;
    if (!other.canEqual((Object) this)) return false;
    if (this.isSuccessful() != other.isSuccessful()) return false;
    final Object this$registerItems = this.getRegisterItems();
    final Object other$registerItems = other.getRegisterItems();
    if (this$registerItems == null ? other$registerItems != null : !this$registerItems.equals(other$registerItems)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof RegisterTaskResultV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isSuccessful() ? 79 : 97);
    final Object $registerItems = this.getRegisterItems();
    result = result * PRIME + ($registerItems == null ? 43 : $registerItems.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "RegisterTaskResultV1(registerItems=" + this.getRegisterItems() + ", successful=" + this.isSuccessful() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public RegisterTaskResultV1() {
  }

  /**
   * Creates a new {@code RegisterTaskResultV1} instance.
   *
   * @param registerItems Liste der abgerufenen Nachweise.
   * @param successful ob die Durchführung des Registeraufrufs erfolgreich war
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public RegisterTaskResultV1(final List<RegisterItemV1> registerItems, final boolean successful) {
    this.registerItems = registerItems;
    this.successful = successful;
  }
}
