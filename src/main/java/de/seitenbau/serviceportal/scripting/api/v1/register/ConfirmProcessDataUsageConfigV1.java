// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.register;

import java.util.List;

/**
 * Dieses Objekt ist experimentell und kann sich noch verändern!
 * Objekt mit den Texten der Ansicht zur Bestätigung der Verwendung persönlichen und weiterer Daten im Task.
 */
public class ConfirmProcessDataUsageConfigV1 {
  /**
   * Beschreibung zur Verwendung persönlicher und weiterer Daten im Task.
   */
  private String displayedDescription;
  /**
   * Überschrift zu den persönlichen Daten
   */
  private String displayedUserSessionDataTitle;
  /**
   * Überschrift zu den zusätzlich benötigten Daten
   */
  private String displayedAdditionalProcessDataTitle;
  /**
   * Zusätzlich benötigte Daten für den Nachweisabruf.
   */
  private List<AdditionalProcessDataV1> additionalProcessData;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class ConfirmProcessDataUsageConfigV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private String displayedDescription;
    @SuppressWarnings("all")
    @lombok.Generated
    private String displayedUserSessionDataTitle;
    @SuppressWarnings("all")
    @lombok.Generated
    private String displayedAdditionalProcessDataTitle;
    @SuppressWarnings("all")
    @lombok.Generated
    private List<AdditionalProcessDataV1> additionalProcessData;

    @SuppressWarnings("all")
    @lombok.Generated
    ConfirmProcessDataUsageConfigV1Builder() {
    }

    /**
     * Beschreibung zur Verwendung persönlicher und weiterer Daten im Task.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmProcessDataUsageConfigV1.ConfirmProcessDataUsageConfigV1Builder displayedDescription(final String displayedDescription) {
      this.displayedDescription = displayedDescription;
      return this;
    }

    /**
     * Überschrift zu den persönlichen Daten
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmProcessDataUsageConfigV1.ConfirmProcessDataUsageConfigV1Builder displayedUserSessionDataTitle(final String displayedUserSessionDataTitle) {
      this.displayedUserSessionDataTitle = displayedUserSessionDataTitle;
      return this;
    }

    /**
     * Überschrift zu den zusätzlich benötigten Daten
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmProcessDataUsageConfigV1.ConfirmProcessDataUsageConfigV1Builder displayedAdditionalProcessDataTitle(final String displayedAdditionalProcessDataTitle) {
      this.displayedAdditionalProcessDataTitle = displayedAdditionalProcessDataTitle;
      return this;
    }

    /**
     * Zusätzlich benötigte Daten für den Nachweisabruf.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmProcessDataUsageConfigV1.ConfirmProcessDataUsageConfigV1Builder additionalProcessData(final List<AdditionalProcessDataV1> additionalProcessData) {
      this.additionalProcessData = additionalProcessData;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmProcessDataUsageConfigV1 build() {
      return new ConfirmProcessDataUsageConfigV1(this.displayedDescription, this.displayedUserSessionDataTitle, this.displayedAdditionalProcessDataTitle, this.additionalProcessData);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "ConfirmProcessDataUsageConfigV1.ConfirmProcessDataUsageConfigV1Builder(displayedDescription=" + this.displayedDescription + ", displayedUserSessionDataTitle=" + this.displayedUserSessionDataTitle + ", displayedAdditionalProcessDataTitle=" + this.displayedAdditionalProcessDataTitle + ", additionalProcessData=" + this.additionalProcessData + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static ConfirmProcessDataUsageConfigV1.ConfirmProcessDataUsageConfigV1Builder builder() {
    return new ConfirmProcessDataUsageConfigV1.ConfirmProcessDataUsageConfigV1Builder();
  }

  /**
   * Beschreibung zur Verwendung persönlicher und weiterer Daten im Task.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getDisplayedDescription() {
    return this.displayedDescription;
  }

  /**
   * Überschrift zu den persönlichen Daten
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getDisplayedUserSessionDataTitle() {
    return this.displayedUserSessionDataTitle;
  }

  /**
   * Überschrift zu den zusätzlich benötigten Daten
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getDisplayedAdditionalProcessDataTitle() {
    return this.displayedAdditionalProcessDataTitle;
  }

  /**
   * Zusätzlich benötigte Daten für den Nachweisabruf.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public List<AdditionalProcessDataV1> getAdditionalProcessData() {
    return this.additionalProcessData;
  }

  /**
   * Beschreibung zur Verwendung persönlicher und weiterer Daten im Task.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setDisplayedDescription(final String displayedDescription) {
    this.displayedDescription = displayedDescription;
  }

  /**
   * Überschrift zu den persönlichen Daten
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setDisplayedUserSessionDataTitle(final String displayedUserSessionDataTitle) {
    this.displayedUserSessionDataTitle = displayedUserSessionDataTitle;
  }

  /**
   * Überschrift zu den zusätzlich benötigten Daten
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setDisplayedAdditionalProcessDataTitle(final String displayedAdditionalProcessDataTitle) {
    this.displayedAdditionalProcessDataTitle = displayedAdditionalProcessDataTitle;
  }

  /**
   * Zusätzlich benötigte Daten für den Nachweisabruf.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setAdditionalProcessData(final List<AdditionalProcessDataV1> additionalProcessData) {
    this.additionalProcessData = additionalProcessData;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof ConfirmProcessDataUsageConfigV1)) return false;
    final ConfirmProcessDataUsageConfigV1 other = (ConfirmProcessDataUsageConfigV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$displayedDescription = this.getDisplayedDescription();
    final Object other$displayedDescription = other.getDisplayedDescription();
    if (this$displayedDescription == null ? other$displayedDescription != null : !this$displayedDescription.equals(other$displayedDescription)) return false;
    final Object this$displayedUserSessionDataTitle = this.getDisplayedUserSessionDataTitle();
    final Object other$displayedUserSessionDataTitle = other.getDisplayedUserSessionDataTitle();
    if (this$displayedUserSessionDataTitle == null ? other$displayedUserSessionDataTitle != null : !this$displayedUserSessionDataTitle.equals(other$displayedUserSessionDataTitle)) return false;
    final Object this$displayedAdditionalProcessDataTitle = this.getDisplayedAdditionalProcessDataTitle();
    final Object other$displayedAdditionalProcessDataTitle = other.getDisplayedAdditionalProcessDataTitle();
    if (this$displayedAdditionalProcessDataTitle == null ? other$displayedAdditionalProcessDataTitle != null : !this$displayedAdditionalProcessDataTitle.equals(other$displayedAdditionalProcessDataTitle)) return false;
    final Object this$additionalProcessData = this.getAdditionalProcessData();
    final Object other$additionalProcessData = other.getAdditionalProcessData();
    if (this$additionalProcessData == null ? other$additionalProcessData != null : !this$additionalProcessData.equals(other$additionalProcessData)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof ConfirmProcessDataUsageConfigV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $displayedDescription = this.getDisplayedDescription();
    result = result * PRIME + ($displayedDescription == null ? 43 : $displayedDescription.hashCode());
    final Object $displayedUserSessionDataTitle = this.getDisplayedUserSessionDataTitle();
    result = result * PRIME + ($displayedUserSessionDataTitle == null ? 43 : $displayedUserSessionDataTitle.hashCode());
    final Object $displayedAdditionalProcessDataTitle = this.getDisplayedAdditionalProcessDataTitle();
    result = result * PRIME + ($displayedAdditionalProcessDataTitle == null ? 43 : $displayedAdditionalProcessDataTitle.hashCode());
    final Object $additionalProcessData = this.getAdditionalProcessData();
    result = result * PRIME + ($additionalProcessData == null ? 43 : $additionalProcessData.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "ConfirmProcessDataUsageConfigV1(displayedDescription=" + this.getDisplayedDescription() + ", displayedUserSessionDataTitle=" + this.getDisplayedUserSessionDataTitle() + ", displayedAdditionalProcessDataTitle=" + this.getDisplayedAdditionalProcessDataTitle() + ", additionalProcessData=" + this.getAdditionalProcessData() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public ConfirmProcessDataUsageConfigV1() {
  }

  /**
   * Creates a new {@code ConfirmProcessDataUsageConfigV1} instance.
   *
   * @param displayedDescription Beschreibung zur Verwendung persönlicher und weiterer Daten im Task.
   * @param displayedUserSessionDataTitle Überschrift zu den persönlichen Daten
   * @param displayedAdditionalProcessDataTitle Überschrift zu den zusätzlich benötigten Daten
   * @param additionalProcessData Zusätzlich benötigte Daten für den Nachweisabruf.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ConfirmProcessDataUsageConfigV1(final String displayedDescription, final String displayedUserSessionDataTitle, final String displayedAdditionalProcessDataTitle, final List<AdditionalProcessDataV1> additionalProcessData) {
    this.displayedDescription = displayedDescription;
    this.displayedUserSessionDataTitle = displayedUserSessionDataTitle;
    this.displayedAdditionalProcessDataTitle = displayedAdditionalProcessDataTitle;
    this.additionalProcessData = additionalProcessData;
  }
}
