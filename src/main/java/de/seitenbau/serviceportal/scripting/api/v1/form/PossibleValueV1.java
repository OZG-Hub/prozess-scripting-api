// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form;

/**
 * Eintrag in einer Auswahlliste eines Feldes.
 *
 * @see PossibleValueListV1
 */
public class PossibleValueV1 {
  /**
   * Anzeigetext des Werts einer Auswahlliste.
   */
  private String label;
  /**
   * Interner Wert des Werts einer Auswahlliste.
   */
  private String value;
  /**
   * Informationen zum Hilfe-Dialog, wenn ein Hilfe-Button angezeigt werden soll.
   */
  private ModalHelpDialogV1 helpDialog;

  public PossibleValueV1(PossibleValueV1 toCopy) {
    this.label = toCopy.getLabel();
    this.value = toCopy.getValue();
    if (toCopy.getHelpDialog() != null) {
      this.helpDialog = new ModalHelpDialogV1(toCopy.getHelpDialog());
    }
  }


  @SuppressWarnings("all")
  public static class PossibleValueV1Builder {
    @SuppressWarnings("all")
    private String label;
    @SuppressWarnings("all")
    private String value;
    @SuppressWarnings("all")
    private ModalHelpDialogV1 helpDialog;

    @SuppressWarnings("all")
    PossibleValueV1Builder() {
    }

    /**
     * Anzeigetext des Werts einer Auswahlliste.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public PossibleValueV1.PossibleValueV1Builder label(final String label) {
      this.label = label;
      return this;
    }

    /**
     * Interner Wert des Werts einer Auswahlliste.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public PossibleValueV1.PossibleValueV1Builder value(final String value) {
      this.value = value;
      return this;
    }

    /**
     * Informationen zum Hilfe-Dialog, wenn ein Hilfe-Button angezeigt werden soll.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public PossibleValueV1.PossibleValueV1Builder helpDialog(final ModalHelpDialogV1 helpDialog) {
      this.helpDialog = helpDialog;
      return this;
    }

    @SuppressWarnings("all")
    public PossibleValueV1 build() {
      return new PossibleValueV1(this.label, this.value, this.helpDialog);
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
      return "PossibleValueV1.PossibleValueV1Builder(label=" + this.label + ", value=" + this.value + ", helpDialog=" + this.helpDialog + ")";
    }
  }

  @SuppressWarnings("all")
  public static PossibleValueV1.PossibleValueV1Builder builder() {
    return new PossibleValueV1.PossibleValueV1Builder();
  }

  /**
   * Anzeigetext des Werts einer Auswahlliste.
   */
  @SuppressWarnings("all")
  public String getLabel() {
    return this.label;
  }

  /**
   * Interner Wert des Werts einer Auswahlliste.
   */
  @SuppressWarnings("all")
  public String getValue() {
    return this.value;
  }

  /**
   * Informationen zum Hilfe-Dialog, wenn ein Hilfe-Button angezeigt werden soll.
   */
  @SuppressWarnings("all")
  public ModalHelpDialogV1 getHelpDialog() {
    return this.helpDialog;
  }

  /**
   * Anzeigetext des Werts einer Auswahlliste.
   */
  @SuppressWarnings("all")
  public void setLabel(final String label) {
    this.label = label;
  }

  /**
   * Interner Wert des Werts einer Auswahlliste.
   */
  @SuppressWarnings("all")
  public void setValue(final String value) {
    this.value = value;
  }

  /**
   * Informationen zum Hilfe-Dialog, wenn ein Hilfe-Button angezeigt werden soll.
   */
  @SuppressWarnings("all")
  public void setHelpDialog(final ModalHelpDialogV1 helpDialog) {
    this.helpDialog = helpDialog;
  }

  @Override
  @SuppressWarnings("all")
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof PossibleValueV1)) return false;
    final PossibleValueV1 other = (PossibleValueV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$label = this.getLabel();
    final Object other$label = other.getLabel();
    if (this$label == null ? other$label != null : !this$label.equals(other$label)) return false;
    final Object this$value = this.getValue();
    final Object other$value = other.getValue();
    if (this$value == null ? other$value != null : !this$value.equals(other$value)) return false;
    final Object this$helpDialog = this.getHelpDialog();
    final Object other$helpDialog = other.getHelpDialog();
    if (this$helpDialog == null ? other$helpDialog != null : !this$helpDialog.equals(other$helpDialog)) return false;
    return true;
  }

  @SuppressWarnings("all")
  protected boolean canEqual(final Object other) {
    return other instanceof PossibleValueV1;
  }

  @Override
  @SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $label = this.getLabel();
    result = result * PRIME + ($label == null ? 43 : $label.hashCode());
    final Object $value = this.getValue();
    result = result * PRIME + ($value == null ? 43 : $value.hashCode());
    final Object $helpDialog = this.getHelpDialog();
    result = result * PRIME + ($helpDialog == null ? 43 : $helpDialog.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  public String toString() {
    return "PossibleValueV1(label=" + this.getLabel() + ", value=" + this.getValue() + ", helpDialog=" + this.getHelpDialog() + ")";
  }

  @SuppressWarnings("all")
  public PossibleValueV1(final String label, final String value, final ModalHelpDialogV1 helpDialog) {
    this.label = label;
    this.value = value;
    this.helpDialog = helpDialog;
  }
}
