// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form.config;

import de.seitenbau.serviceportal.scripting.api.v1.form.FieldTypeV1;
import de.seitenbau.serviceportal.scripting.api.v1.form.ajax.ExternalDataSourcePropertiesV1;

/**
 * Konfiguration für PDF-Anzeigefelder ({@link FieldTypeV1#PDF PDF}).
 */
public class AdditionalPdfConfigV1 implements AdditionalFieldConfigV1 {
  /**
   * {@code true}, wenn die Anzeige des PDFs bestätigt werden soll.
   */
  private boolean confirmPdfIsRendered;
  /**
   * Gibt eine externe Quelle an, an die die Bestätigung der Anzeige geschickt werden soll.
   */
  private ExternalDataSourcePropertiesV1 confirmationTargetProperties;

  @Override
  public AdditionalPdfConfigV1 clone() {
    try {
      return (AdditionalPdfConfigV1) super.clone();
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * Creates a new {@code AdditionalPdfConfigV1} instance.
   *
   * @param confirmPdfIsRendered {@code true}, wenn die Anzeige des PDFs bestätigt werden soll.
   * @param confirmationTargetProperties Gibt eine externe Quelle an, an die die Bestätigung der Anzeige geschickt werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  AdditionalPdfConfigV1(final boolean confirmPdfIsRendered, final ExternalDataSourcePropertiesV1 confirmationTargetProperties) {
    this.confirmPdfIsRendered = confirmPdfIsRendered;
    this.confirmationTargetProperties = confirmationTargetProperties;
  }


  @SuppressWarnings("all")
  @lombok.Generated
  public static class AdditionalPdfConfigV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private boolean confirmPdfIsRendered;
    @SuppressWarnings("all")
    @lombok.Generated
    private ExternalDataSourcePropertiesV1 confirmationTargetProperties;

    @SuppressWarnings("all")
    @lombok.Generated
    AdditionalPdfConfigV1Builder() {
    }

    /**
     * {@code true}, wenn die Anzeige des PDFs bestätigt werden soll.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalPdfConfigV1.AdditionalPdfConfigV1Builder confirmPdfIsRendered(final boolean confirmPdfIsRendered) {
      this.confirmPdfIsRendered = confirmPdfIsRendered;
      return this;
    }

    /**
     * Gibt eine externe Quelle an, an die die Bestätigung der Anzeige geschickt werden soll.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalPdfConfigV1.AdditionalPdfConfigV1Builder confirmationTargetProperties(final ExternalDataSourcePropertiesV1 confirmationTargetProperties) {
      this.confirmationTargetProperties = confirmationTargetProperties;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalPdfConfigV1 build() {
      return new AdditionalPdfConfigV1(this.confirmPdfIsRendered, this.confirmationTargetProperties);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "AdditionalPdfConfigV1.AdditionalPdfConfigV1Builder(confirmPdfIsRendered=" + this.confirmPdfIsRendered + ", confirmationTargetProperties=" + this.confirmationTargetProperties + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static AdditionalPdfConfigV1.AdditionalPdfConfigV1Builder builder() {
    return new AdditionalPdfConfigV1.AdditionalPdfConfigV1Builder();
  }

  /**
   * {@code true}, wenn die Anzeige des PDFs bestätigt werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean isConfirmPdfIsRendered() {
    return this.confirmPdfIsRendered;
  }

  /**
   * Gibt eine externe Quelle an, an die die Bestätigung der Anzeige geschickt werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ExternalDataSourcePropertiesV1 getConfirmationTargetProperties() {
    return this.confirmationTargetProperties;
  }

  /**
   * {@code true}, wenn die Anzeige des PDFs bestätigt werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setConfirmPdfIsRendered(final boolean confirmPdfIsRendered) {
    this.confirmPdfIsRendered = confirmPdfIsRendered;
  }

  /**
   * Gibt eine externe Quelle an, an die die Bestätigung der Anzeige geschickt werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setConfirmationTargetProperties(final ExternalDataSourcePropertiesV1 confirmationTargetProperties) {
    this.confirmationTargetProperties = confirmationTargetProperties;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof AdditionalPdfConfigV1)) return false;
    final AdditionalPdfConfigV1 other = (AdditionalPdfConfigV1) o;
    if (!other.canEqual((Object) this)) return false;
    if (this.isConfirmPdfIsRendered() != other.isConfirmPdfIsRendered()) return false;
    final Object this$confirmationTargetProperties = this.getConfirmationTargetProperties();
    final Object other$confirmationTargetProperties = other.getConfirmationTargetProperties();
    if (this$confirmationTargetProperties == null ? other$confirmationTargetProperties != null : !this$confirmationTargetProperties.equals(other$confirmationTargetProperties)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof AdditionalPdfConfigV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isConfirmPdfIsRendered() ? 79 : 97);
    final Object $confirmationTargetProperties = this.getConfirmationTargetProperties();
    result = result * PRIME + ($confirmationTargetProperties == null ? 43 : $confirmationTargetProperties.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "AdditionalPdfConfigV1(confirmPdfIsRendered=" + this.isConfirmPdfIsRendered() + ", confirmationTargetProperties=" + this.getConfirmationTargetProperties() + ")";
  }
}
