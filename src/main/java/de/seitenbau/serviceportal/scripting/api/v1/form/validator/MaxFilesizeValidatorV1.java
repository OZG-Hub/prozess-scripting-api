// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form.validator;

/**
 * Validierungsregel, die prüft, dass eine hochgeladene Datei nicht die definierte maximale Dateigröße
 * überschreitet.
 */
public class MaxFilesizeValidatorV1 extends ValidationRuleV1 {
  /**
   * Maximale Größe der Datei (in Bytes).
   */
  private int maxFilesize;


  @SuppressWarnings("all")
  @lombok.Generated
  public static abstract class MaxFilesizeValidatorV1Builder<C extends MaxFilesizeValidatorV1, B extends MaxFilesizeValidatorV1.MaxFilesizeValidatorV1Builder<C, B>> extends ValidationRuleV1.ValidationRuleV1Builder<C, B> {
    @SuppressWarnings("all")
    @lombok.Generated
    private int maxFilesize;

    /**
     * Maximale Größe der Datei (in Bytes).
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public B maxFilesize(final int maxFilesize) {
      this.maxFilesize = maxFilesize;
      return self();
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    protected abstract B self();

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public abstract C build();

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "MaxFilesizeValidatorV1.MaxFilesizeValidatorV1Builder(super=" + super.toString() + ", maxFilesize=" + this.maxFilesize + ")";
    }
  }


  @SuppressWarnings("all")
  @lombok.Generated
  private static final class MaxFilesizeValidatorV1BuilderImpl extends MaxFilesizeValidatorV1.MaxFilesizeValidatorV1Builder<MaxFilesizeValidatorV1, MaxFilesizeValidatorV1.MaxFilesizeValidatorV1BuilderImpl> {
    @SuppressWarnings("all")
    @lombok.Generated
    private MaxFilesizeValidatorV1BuilderImpl() {
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    protected MaxFilesizeValidatorV1.MaxFilesizeValidatorV1BuilderImpl self() {
      return this;
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public MaxFilesizeValidatorV1 build() {
      return new MaxFilesizeValidatorV1(this);
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected MaxFilesizeValidatorV1(final MaxFilesizeValidatorV1.MaxFilesizeValidatorV1Builder<?, ?> b) {
    super(b);
    this.maxFilesize = b.maxFilesize;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static MaxFilesizeValidatorV1.MaxFilesizeValidatorV1Builder<?, ?> builder() {
    return new MaxFilesizeValidatorV1.MaxFilesizeValidatorV1BuilderImpl();
  }

  /**
   * Maximale Größe der Datei (in Bytes).
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public int getMaxFilesize() {
    return this.maxFilesize;
  }

  /**
   * Maximale Größe der Datei (in Bytes).
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setMaxFilesize(final int maxFilesize) {
    this.maxFilesize = maxFilesize;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "MaxFilesizeValidatorV1(maxFilesize=" + this.getMaxFilesize() + ")";
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof MaxFilesizeValidatorV1)) return false;
    final MaxFilesizeValidatorV1 other = (MaxFilesizeValidatorV1) o;
    if (!other.canEqual((Object) this)) return false;
    if (this.getMaxFilesize() != other.getMaxFilesize()) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof MaxFilesizeValidatorV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + this.getMaxFilesize();
    return result;
  }
}
