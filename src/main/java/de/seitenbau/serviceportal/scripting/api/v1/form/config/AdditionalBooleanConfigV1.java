// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form.config;

import de.seitenbau.serviceportal.scripting.api.v1.form.FieldTypeV1;

/**
 * Konfiguration f√ºr Boolean-Felder ({@link FieldTypeV1#BOOLEAN}).
 */
public class AdditionalBooleanConfigV1 implements AdditionalFieldConfigV1 {
  /**
   * Ausrichtung der darzustellenden Boolean Radiobuttons.
   * Valide Werte sind 'horizontal' und 'vertical'.
   * Nur verwendbar mit formular-engine version 2.
   */
  private String layout;

  @Override
  public AdditionalBooleanConfigV1 clone() {
    try {
      return (AdditionalBooleanConfigV1) super.clone();
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * Creates a new {@code AdditionalBooleanConfigV1} instance.
   *
   * @param layout Ausrichtung der darzustellenden Boolean Radiobuttons.
   * Valide Werte sind 'horizontal' und 'vertical'.
   * Nur verwendbar mit formular-engine version 2.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  AdditionalBooleanConfigV1(final String layout) {
    this.layout = layout;
  }


  @SuppressWarnings("all")
  @lombok.Generated
  public static class AdditionalBooleanConfigV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private String layout;

    @SuppressWarnings("all")
    @lombok.Generated
    AdditionalBooleanConfigV1Builder() {
    }

    /**
     * Ausrichtung der darzustellenden Boolean Radiobuttons.
     * Valide Werte sind 'horizontal' und 'vertical'.
     * Nur verwendbar mit formular-engine version 2.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalBooleanConfigV1.AdditionalBooleanConfigV1Builder layout(final String layout) {
      this.layout = layout;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalBooleanConfigV1 build() {
      return new AdditionalBooleanConfigV1(this.layout);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "AdditionalBooleanConfigV1.AdditionalBooleanConfigV1Builder(layout=" + this.layout + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static AdditionalBooleanConfigV1.AdditionalBooleanConfigV1Builder builder() {
    return new AdditionalBooleanConfigV1.AdditionalBooleanConfigV1Builder();
  }

  /**
   * Ausrichtung der darzustellenden Boolean Radiobuttons.
   * Valide Werte sind 'horizontal' und 'vertical'.
   * Nur verwendbar mit formular-engine version 2.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getLayout() {
    return this.layout;
  }

  /**
   * Ausrichtung der darzustellenden Boolean Radiobuttons.
   * Valide Werte sind 'horizontal' und 'vertical'.
   * Nur verwendbar mit formular-engine version 2.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setLayout(final String layout) {
    this.layout = layout;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof AdditionalBooleanConfigV1)) return false;
    final AdditionalBooleanConfigV1 other = (AdditionalBooleanConfigV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$layout = this.getLayout();
    final Object other$layout = other.getLayout();
    if (this$layout == null ? other$layout != null : !this$layout.equals(other$layout)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof AdditionalBooleanConfigV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $layout = this.getLayout();
    result = result * PRIME + ($layout == null ? 43 : $layout.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "AdditionalBooleanConfigV1(layout=" + this.getLayout() + ")";
  }
}
