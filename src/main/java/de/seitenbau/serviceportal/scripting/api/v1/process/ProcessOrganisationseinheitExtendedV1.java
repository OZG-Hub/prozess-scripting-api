// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.process;

import java.util.List;

/**
 * Mit weiteren Informationen angereichertes Objekt einer Organisationseinheit (OE).
 */
public class ProcessOrganisationseinheitExtendedV1 {
  /**
   * OE.
   */
  private ProcessOrganisationseinheitV1 oe;
  /**
   * Internetadressen der OE.
   */
  private List<ProcessOrganisationseinheitInternetadresseV1> internetadressen;
  /**
   * Region für die diese OE zuständig ist.
   */
  private ProcessOrganisationseinheitRegionV1 zustaendigkeitRegion;
  /**
   * Beschreibungstext einer Leistung der OE.
   */
  private ProcessOrganisationseinheitSearchIndexEntryV1 leistungSearchIndexEntry;
  /**
   * Aufgabengebiet der OE.
   */
  private String aufgabengebiet;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class ProcessOrganisationseinheitExtendedV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private ProcessOrganisationseinheitV1 oe;
    @SuppressWarnings("all")
    @lombok.Generated
    private List<ProcessOrganisationseinheitInternetadresseV1> internetadressen;
    @SuppressWarnings("all")
    @lombok.Generated
    private ProcessOrganisationseinheitRegionV1 zustaendigkeitRegion;
    @SuppressWarnings("all")
    @lombok.Generated
    private ProcessOrganisationseinheitSearchIndexEntryV1 leistungSearchIndexEntry;
    @SuppressWarnings("all")
    @lombok.Generated
    private String aufgabengebiet;

    @SuppressWarnings("all")
    @lombok.Generated
    ProcessOrganisationseinheitExtendedV1Builder() {
    }

    /**
     * OE.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder oe(final ProcessOrganisationseinheitV1 oe) {
      this.oe = oe;
      return this;
    }

    /**
     * Internetadressen der OE.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder internetadressen(final List<ProcessOrganisationseinheitInternetadresseV1> internetadressen) {
      this.internetadressen = internetadressen;
      return this;
    }

    /**
     * Region für die diese OE zuständig ist.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder zustaendigkeitRegion(final ProcessOrganisationseinheitRegionV1 zustaendigkeitRegion) {
      this.zustaendigkeitRegion = zustaendigkeitRegion;
      return this;
    }

    /**
     * Beschreibungstext einer Leistung der OE.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder leistungSearchIndexEntry(final ProcessOrganisationseinheitSearchIndexEntryV1 leistungSearchIndexEntry) {
      this.leistungSearchIndexEntry = leistungSearchIndexEntry;
      return this;
    }

    /**
     * Aufgabengebiet der OE.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder aufgabengebiet(final String aufgabengebiet) {
      this.aufgabengebiet = aufgabengebiet;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitExtendedV1 build() {
      return new ProcessOrganisationseinheitExtendedV1(this.oe, this.internetadressen, this.zustaendigkeitRegion, this.leistungSearchIndexEntry, this.aufgabengebiet);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder(oe=" + this.oe + ", internetadressen=" + this.internetadressen + ", zustaendigkeitRegion=" + this.zustaendigkeitRegion + ", leistungSearchIndexEntry=" + this.leistungSearchIndexEntry + ", aufgabengebiet=" + this.aufgabengebiet + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder builder() {
    return new ProcessOrganisationseinheitExtendedV1.ProcessOrganisationseinheitExtendedV1Builder();
  }

  /**
   * OE.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ProcessOrganisationseinheitV1 getOe() {
    return this.oe;
  }

  /**
   * Internetadressen der OE.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public List<ProcessOrganisationseinheitInternetadresseV1> getInternetadressen() {
    return this.internetadressen;
  }

  /**
   * Region für die diese OE zuständig ist.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ProcessOrganisationseinheitRegionV1 getZustaendigkeitRegion() {
    return this.zustaendigkeitRegion;
  }

  /**
   * Beschreibungstext einer Leistung der OE.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ProcessOrganisationseinheitSearchIndexEntryV1 getLeistungSearchIndexEntry() {
    return this.leistungSearchIndexEntry;
  }

  /**
   * Aufgabengebiet der OE.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getAufgabengebiet() {
    return this.aufgabengebiet;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "ProcessOrganisationseinheitExtendedV1(oe=" + this.getOe() + ", internetadressen=" + this.getInternetadressen() + ", zustaendigkeitRegion=" + this.getZustaendigkeitRegion() + ", leistungSearchIndexEntry=" + this.getLeistungSearchIndexEntry() + ", aufgabengebiet=" + this.getAufgabengebiet() + ")";
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof ProcessOrganisationseinheitExtendedV1)) return false;
    final ProcessOrganisationseinheitExtendedV1 other = (ProcessOrganisationseinheitExtendedV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$oe = this.getOe();
    final Object other$oe = other.getOe();
    if (this$oe == null ? other$oe != null : !this$oe.equals(other$oe)) return false;
    final Object this$internetadressen = this.getInternetadressen();
    final Object other$internetadressen = other.getInternetadressen();
    if (this$internetadressen == null ? other$internetadressen != null : !this$internetadressen.equals(other$internetadressen)) return false;
    final Object this$zustaendigkeitRegion = this.getZustaendigkeitRegion();
    final Object other$zustaendigkeitRegion = other.getZustaendigkeitRegion();
    if (this$zustaendigkeitRegion == null ? other$zustaendigkeitRegion != null : !this$zustaendigkeitRegion.equals(other$zustaendigkeitRegion)) return false;
    final Object this$leistungSearchIndexEntry = this.getLeistungSearchIndexEntry();
    final Object other$leistungSearchIndexEntry = other.getLeistungSearchIndexEntry();
    if (this$leistungSearchIndexEntry == null ? other$leistungSearchIndexEntry != null : !this$leistungSearchIndexEntry.equals(other$leistungSearchIndexEntry)) return false;
    final Object this$aufgabengebiet = this.getAufgabengebiet();
    final Object other$aufgabengebiet = other.getAufgabengebiet();
    if (this$aufgabengebiet == null ? other$aufgabengebiet != null : !this$aufgabengebiet.equals(other$aufgabengebiet)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof ProcessOrganisationseinheitExtendedV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $oe = this.getOe();
    result = result * PRIME + ($oe == null ? 43 : $oe.hashCode());
    final Object $internetadressen = this.getInternetadressen();
    result = result * PRIME + ($internetadressen == null ? 43 : $internetadressen.hashCode());
    final Object $zustaendigkeitRegion = this.getZustaendigkeitRegion();
    result = result * PRIME + ($zustaendigkeitRegion == null ? 43 : $zustaendigkeitRegion.hashCode());
    final Object $leistungSearchIndexEntry = this.getLeistungSearchIndexEntry();
    result = result * PRIME + ($leistungSearchIndexEntry == null ? 43 : $leistungSearchIndexEntry.hashCode());
    final Object $aufgabengebiet = this.getAufgabengebiet();
    result = result * PRIME + ($aufgabengebiet == null ? 43 : $aufgabengebiet.hashCode());
    return result;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public ProcessOrganisationseinheitExtendedV1() {
  }

  /**
   * Creates a new {@code ProcessOrganisationseinheitExtendedV1} instance.
   *
   * @param oe OE.
   * @param internetadressen Internetadressen der OE.
   * @param zustaendigkeitRegion Region für die diese OE zuständig ist.
   * @param leistungSearchIndexEntry Beschreibungstext einer Leistung der OE.
   * @param aufgabengebiet Aufgabengebiet der OE.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ProcessOrganisationseinheitExtendedV1(final ProcessOrganisationseinheitV1 oe, final List<ProcessOrganisationseinheitInternetadresseV1> internetadressen, final ProcessOrganisationseinheitRegionV1 zustaendigkeitRegion, final ProcessOrganisationseinheitSearchIndexEntryV1 leistungSearchIndexEntry, final String aufgabengebiet) {
    this.oe = oe;
    this.internetadressen = internetadressen;
    this.zustaendigkeitRegion = zustaendigkeitRegion;
    this.leistungSearchIndexEntry = leistungSearchIndexEntry;
    this.aufgabengebiet = aufgabengebiet;
  }
}
