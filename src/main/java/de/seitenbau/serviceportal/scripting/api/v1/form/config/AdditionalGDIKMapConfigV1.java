// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form.config;

import java.util.List;
import de.seitenbau.serviceportal.scripting.api.v1.form.FieldTypeV1;
import de.seitenbau.serviceportal.scripting.api.v1.form.geomap.GDIKModeV1;
import de.seitenbau.serviceportal.scripting.api.v1.form.geomap.GDIKOutputTypeV1;

/**
 * Konfiguration für GDIK Geokarten-Felder ({@link FieldTypeV1#GDIK_MAP GDIK_MAP}).
 */
public class AdditionalGDIKMapConfigV1 implements AdditionalFieldConfigV1 {
  /**
   * URL zur Konfigurationsdatei.
   */
  private String configUrl;
  /**
   * Modus der Kartenanwendung. Im Modus {@link GDIKModeV1#INPUT} kann der Antragssteller ein Element in die
   * Karte einzeichnen. Im Modus {@link GDIKModeV1#SELECT} können Elemente auf der Karte ausgewählt werden,
   * aber keine eigenen Elemente eingezeichnet werden.
   */
  private GDIKModeV1 mode;
  /**
   * Text, nach dem in der Karte gesucht werden soll. Ist ein Suchtext definiert, wird nach diesem Text in der
   * Kartenanwendung über das Suchfeld gesucht und die Suchergebnisse / Vorschläge werden angezeigt.
   */
  private String searchString;
  /**
   * Liste an Dateitypen, in die die Karte exportiert werden soll.
   */
  private List<GDIKOutputTypeV1> outputTypes;

  @Override
  public AdditionalGDIKMapConfigV1 clone() {
    try {
      return (AdditionalGDIKMapConfigV1) super.clone();
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * Creates a new {@code AdditionalGDIKMapConfigV1} instance.
   *
   * @param configUrl URL zur Konfigurationsdatei.
   * @param mode Modus der Kartenanwendung. Im Modus {@link GDIKModeV1#INPUT} kann der Antragssteller ein Element in die
   * Karte einzeichnen. Im Modus {@link GDIKModeV1#SELECT} können Elemente auf der Karte ausgewählt werden,
   * aber keine eigenen Elemente eingezeichnet werden.
   * @param searchString Text, nach dem in der Karte gesucht werden soll. Ist ein Suchtext definiert, wird nach diesem Text in der
   * Kartenanwendung über das Suchfeld gesucht und die Suchergebnisse / Vorschläge werden angezeigt.
   * @param outputTypes Liste an Dateitypen, in die die Karte exportiert werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  AdditionalGDIKMapConfigV1(final String configUrl, final GDIKModeV1 mode, final String searchString, final List<GDIKOutputTypeV1> outputTypes) {
    this.configUrl = configUrl;
    this.mode = mode;
    this.searchString = searchString;
    this.outputTypes = outputTypes;
  }


  @SuppressWarnings("all")
  @lombok.Generated
  public static class AdditionalGDIKMapConfigV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private String configUrl;
    @SuppressWarnings("all")
    @lombok.Generated
    private GDIKModeV1 mode;
    @SuppressWarnings("all")
    @lombok.Generated
    private String searchString;
    @SuppressWarnings("all")
    @lombok.Generated
    private List<GDIKOutputTypeV1> outputTypes;

    @SuppressWarnings("all")
    @lombok.Generated
    AdditionalGDIKMapConfigV1Builder() {
    }

    /**
     * URL zur Konfigurationsdatei.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalGDIKMapConfigV1.AdditionalGDIKMapConfigV1Builder configUrl(final String configUrl) {
      this.configUrl = configUrl;
      return this;
    }

    /**
     * Modus der Kartenanwendung. Im Modus {@link GDIKModeV1#INPUT} kann der Antragssteller ein Element in die
     * Karte einzeichnen. Im Modus {@link GDIKModeV1#SELECT} können Elemente auf der Karte ausgewählt werden,
     * aber keine eigenen Elemente eingezeichnet werden.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalGDIKMapConfigV1.AdditionalGDIKMapConfigV1Builder mode(final GDIKModeV1 mode) {
      this.mode = mode;
      return this;
    }

    /**
     * Text, nach dem in der Karte gesucht werden soll. Ist ein Suchtext definiert, wird nach diesem Text in der
     * Kartenanwendung über das Suchfeld gesucht und die Suchergebnisse / Vorschläge werden angezeigt.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalGDIKMapConfigV1.AdditionalGDIKMapConfigV1Builder searchString(final String searchString) {
      this.searchString = searchString;
      return this;
    }

    /**
     * Liste an Dateitypen, in die die Karte exportiert werden soll.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalGDIKMapConfigV1.AdditionalGDIKMapConfigV1Builder outputTypes(final List<GDIKOutputTypeV1> outputTypes) {
      this.outputTypes = outputTypes;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public AdditionalGDIKMapConfigV1 build() {
      return new AdditionalGDIKMapConfigV1(this.configUrl, this.mode, this.searchString, this.outputTypes);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "AdditionalGDIKMapConfigV1.AdditionalGDIKMapConfigV1Builder(configUrl=" + this.configUrl + ", mode=" + this.mode + ", searchString=" + this.searchString + ", outputTypes=" + this.outputTypes + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static AdditionalGDIKMapConfigV1.AdditionalGDIKMapConfigV1Builder builder() {
    return new AdditionalGDIKMapConfigV1.AdditionalGDIKMapConfigV1Builder();
  }

  /**
   * URL zur Konfigurationsdatei.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getConfigUrl() {
    return this.configUrl;
  }

  /**
   * Modus der Kartenanwendung. Im Modus {@link GDIKModeV1#INPUT} kann der Antragssteller ein Element in die
   * Karte einzeichnen. Im Modus {@link GDIKModeV1#SELECT} können Elemente auf der Karte ausgewählt werden,
   * aber keine eigenen Elemente eingezeichnet werden.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public GDIKModeV1 getMode() {
    return this.mode;
  }

  /**
   * Text, nach dem in der Karte gesucht werden soll. Ist ein Suchtext definiert, wird nach diesem Text in der
   * Kartenanwendung über das Suchfeld gesucht und die Suchergebnisse / Vorschläge werden angezeigt.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getSearchString() {
    return this.searchString;
  }

  /**
   * Liste an Dateitypen, in die die Karte exportiert werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public List<GDIKOutputTypeV1> getOutputTypes() {
    return this.outputTypes;
  }

  /**
   * URL zur Konfigurationsdatei.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setConfigUrl(final String configUrl) {
    this.configUrl = configUrl;
  }

  /**
   * Modus der Kartenanwendung. Im Modus {@link GDIKModeV1#INPUT} kann der Antragssteller ein Element in die
   * Karte einzeichnen. Im Modus {@link GDIKModeV1#SELECT} können Elemente auf der Karte ausgewählt werden,
   * aber keine eigenen Elemente eingezeichnet werden.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setMode(final GDIKModeV1 mode) {
    this.mode = mode;
  }

  /**
   * Text, nach dem in der Karte gesucht werden soll. Ist ein Suchtext definiert, wird nach diesem Text in der
   * Kartenanwendung über das Suchfeld gesucht und die Suchergebnisse / Vorschläge werden angezeigt.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setSearchString(final String searchString) {
    this.searchString = searchString;
  }

  /**
   * Liste an Dateitypen, in die die Karte exportiert werden soll.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setOutputTypes(final List<GDIKOutputTypeV1> outputTypes) {
    this.outputTypes = outputTypes;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof AdditionalGDIKMapConfigV1)) return false;
    final AdditionalGDIKMapConfigV1 other = (AdditionalGDIKMapConfigV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$configUrl = this.getConfigUrl();
    final Object other$configUrl = other.getConfigUrl();
    if (this$configUrl == null ? other$configUrl != null : !this$configUrl.equals(other$configUrl)) return false;
    final Object this$mode = this.getMode();
    final Object other$mode = other.getMode();
    if (this$mode == null ? other$mode != null : !this$mode.equals(other$mode)) return false;
    final Object this$searchString = this.getSearchString();
    final Object other$searchString = other.getSearchString();
    if (this$searchString == null ? other$searchString != null : !this$searchString.equals(other$searchString)) return false;
    final Object this$outputTypes = this.getOutputTypes();
    final Object other$outputTypes = other.getOutputTypes();
    if (this$outputTypes == null ? other$outputTypes != null : !this$outputTypes.equals(other$outputTypes)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof AdditionalGDIKMapConfigV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $configUrl = this.getConfigUrl();
    result = result * PRIME + ($configUrl == null ? 43 : $configUrl.hashCode());
    final Object $mode = this.getMode();
    result = result * PRIME + ($mode == null ? 43 : $mode.hashCode());
    final Object $searchString = this.getSearchString();
    result = result * PRIME + ($searchString == null ? 43 : $searchString.hashCode());
    final Object $outputTypes = this.getOutputTypes();
    result = result * PRIME + ($outputTypes == null ? 43 : $outputTypes.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "AdditionalGDIKMapConfigV1(configUrl=" + this.getConfigUrl() + ", mode=" + this.getMode() + ", searchString=" + this.getSearchString() + ", outputTypes=" + this.getOutputTypes() + ")";
  }
}
