// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import de.seitenbau.serviceportal.scripting.api.v1.form.content.BinaryContentV1;
import de.seitenbau.serviceportal.scripting.api.v1.form.content.FileReferenceV1;
import de.seitenbau.serviceportal.scripting.api.v1.form.content.GeoMapContentV1;

/**
 * Enum der Feldtypen.
 */
public enum FieldTypeV1 {
  /**
   * Einzeilige Texteingabe.
   */
  STRING(String.class), /**
   * Mehrzeilige Texteingabe.
   */
  TEXTAREA(String.class), /**
   * Dateiupload.
   */
  FILE(FileReferenceV1.class, BinaryContentV1.class), /**
   * Dateiupload-Feld mit Möglichkeit mehrere Dateien hochzuladen.
   */
  MULTIPLE_FILE(ArrayList.class), /**
   * Radiobutton mit Werten "Ja" und "Nein".
   */
  BOOLEAN(Boolean.class), /**
   * HTML-formatierte Textanzeige (ohne Eingabemöglichkeit). HTML steht in
   * {@link FormFieldV1#getLabel() label}.
   */
  TEXT(String.class), /**
   * Liste aus mehreren Checkboxen.
   */
  CHECKBOX(ArrayList.class), /**
   * Einzelne Checkbox (ohne Titel).
   */
  SINGLE_CHECKBOX(Boolean.class), /**
   * Liste aus mehreren Radiobuttons.
   */
  RADIO_BUTTONS(String.class), /**
   * Dropdown, aus dem ein einzelner Wert ausgewählt werden kann.
   */
  DROPDOWN_SINGLE_SELECT(String.class), /**
   * Platzhalter (ohne Eingabemöglichkeit).
   */
  PLACEHOLDER(String.class), /**
   * Datumseingabe.
   */
  DATE(Date.class), /**
   * Uhrzeiteingabe.
   */
  TIME(Date.class), /**
   * Geldbetrageingabe (nur Euro).
   */
  EURO_BETRAG(BigDecimal.class), /**
   * Eingabefeld mit Vorschlagsliste.
   */
  STRING_AJAX_AUTOCOMPLETE(String.class), /**
   * Dropdown mit Vorschlagsliste.
   */
  DROPDOWN_SINGLE_SELECT_AJAX(String.class), /**
   * Überschrift einer Feldgruppe (ohne Eingabemöglichkeit). Text steht in
   * {@link FormFieldV1#getLabel() label}.
   */
  H1(String.class), /**
   * Zwischenüberschrift einer Feldgruppe (ohne Eingabemöglichkeit). Text steht in
   * {@link FormFieldV1#getLabel() label}.
   */
  H2(String.class), /**
   * Speichert, ob der Benutzer beim Absenden mit dem nPA angemeldet war oder nicht.
   */
  SUBMITTED_WITH_NPA_INFO(Boolean.class), /**
   * Geo-Dateneingabe.
   */
  GEO_MAP(GeoMapContentV1.class), /**
   * Videoanzeige.
   */
  VIDEO(String.class), /**
   * Bildanzeige.
   */
  IMAGE(String.class), /**
   * Kraftfahrzeug-Kennzeicheneingabe.
   */
  KFZ_KENNZEICHEN(String.class), /**
   * Gesicherter Download.
   */
  DOWNLOAD(String.class), /**
   * Hinweisboxanzeige.
   */
  HINTBOX(String.class), /**
   * PDF anzeigen mit Option zur Bestätigung der Anzeige.
   */
  PDF(String.class), /**
   * Dropdown, aus dem mehrere Werte ausgewählt werden können.
   */
  @Deprecated
  DROPDOWN_MULTIPLE_SELECT(ArrayList.class), /**
   * 2 miteinander verbundene Multiselects.
   */
  @Deprecated
  TWO_LIST_SELECT(ArrayList.class);
  /**
   * Liste der Klassen / Typen, die ein Feldwert eines Feldes mit dem entsprechenden Typ annehmen kann.
   * <p>
   * Manche Felder können auch {@code null} als Feldwert haben und manche Felder, wie z.B.
   * {@link #IMAGE IMAGE} haben nie einen Feldwert (immer {@code null}), da es keine Nutzereingabe gibt.
   * Trotzdem ist auch für diese Feldtypen eine Klasse (immer {@code String.class}) hinterlegt.
   */
  private final List<Class<?>> valueClasses;

  FieldTypeV1(Class<?> valueClass) {
    valueClasses = Collections.singletonList(valueClass);
  }

  FieldTypeV1(Class<?> valueClass1, Class<?> valueClass2) {
    valueClasses = Collections.unmodifiableList(Arrays.asList(valueClass1, valueClass2));
  }

  /**
   * Liste der Klassen / Typen, die ein Feldwert eines Feldes mit dem entsprechenden Typ annehmen kann.
   * <p>
   * Manche Felder können auch {@code null} als Feldwert haben und manche Felder, wie z.B.
   * {@link #IMAGE IMAGE} haben nie einen Feldwert (immer {@code null}), da es keine Nutzereingabe gibt.
   * Trotzdem ist auch für diese Feldtypen eine Klasse (immer {@code String.class}) hinterlegt.
   */
  @SuppressWarnings("all")
  public List<Class<?>> getValueClasses() {
    return this.valueClasses;
  }
}
