// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form.validator;

import java.util.List;

/**
 * Validierungsregel, die pr√ºft, dass eine hochgeladene Datei einen der erlaubten Dateitypen hat.
 */
public class FileExtensionValidatorV1 extends ValidationRuleV1 {
  /**
   * Liste der erlaubten Dateiendungen.
   */
  private List<String> values;


  @SuppressWarnings("all")
  @lombok.Generated
  public static abstract class FileExtensionValidatorV1Builder<C extends FileExtensionValidatorV1, B extends FileExtensionValidatorV1.FileExtensionValidatorV1Builder<C, B>> extends ValidationRuleV1.ValidationRuleV1Builder<C, B> {
    @SuppressWarnings("all")
    @lombok.Generated
    private List<String> values;

    /**
     * Liste der erlaubten Dateiendungen.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public B values(final List<String> values) {
      this.values = values;
      return self();
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    protected abstract B self();

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public abstract C build();

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FileExtensionValidatorV1.FileExtensionValidatorV1Builder(super=" + super.toString() + ", values=" + this.values + ")";
    }
  }


  @SuppressWarnings("all")
  @lombok.Generated
  private static final class FileExtensionValidatorV1BuilderImpl extends FileExtensionValidatorV1.FileExtensionValidatorV1Builder<FileExtensionValidatorV1, FileExtensionValidatorV1.FileExtensionValidatorV1BuilderImpl> {
    @SuppressWarnings("all")
    @lombok.Generated
    private FileExtensionValidatorV1BuilderImpl() {
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    protected FileExtensionValidatorV1.FileExtensionValidatorV1BuilderImpl self() {
      return this;
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public FileExtensionValidatorV1 build() {
      return new FileExtensionValidatorV1(this);
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected FileExtensionValidatorV1(final FileExtensionValidatorV1.FileExtensionValidatorV1Builder<?, ?> b) {
    super(b);
    this.values = b.values;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FileExtensionValidatorV1.FileExtensionValidatorV1Builder<?, ?> builder() {
    return new FileExtensionValidatorV1.FileExtensionValidatorV1BuilderImpl();
  }

  /**
   * Liste der erlaubten Dateiendungen.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public List<String> getValues() {
    return this.values;
  }

  /**
   * Liste der erlaubten Dateiendungen.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setValues(final List<String> values) {
    this.values = values;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FileExtensionValidatorV1(values=" + this.getValues() + ")";
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FileExtensionValidatorV1)) return false;
    final FileExtensionValidatorV1 other = (FileExtensionValidatorV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$values = this.getValues();
    final Object other$values = other.getValues();
    if (this$values == null ? other$values != null : !this$values.equals(other$values)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FileExtensionValidatorV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $values = this.getValues();
    result = result * PRIME + ($values == null ? 43 : $values.hashCode());
    return result;
  }
}
