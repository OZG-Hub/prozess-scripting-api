// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.commons;

public class KeyValueV1<T> {
  private String key;
  private T value;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class KeyValueV1Builder<T> {
    @SuppressWarnings("all")
    @lombok.Generated
    private String key;
    @SuppressWarnings("all")
    @lombok.Generated
    private T value;

    @SuppressWarnings("all")
    @lombok.Generated
    KeyValueV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public KeyValueV1.KeyValueV1Builder<T> key(final String key) {
      this.key = key;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public KeyValueV1.KeyValueV1Builder<T> value(final T value) {
      this.value = value;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public KeyValueV1<T> build() {
      return new KeyValueV1<T>(this.key, this.value);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "KeyValueV1.KeyValueV1Builder(key=" + this.key + ", value=" + this.value + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static <T> KeyValueV1.KeyValueV1Builder<T> builder() {
    return new KeyValueV1.KeyValueV1Builder<T>();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getKey() {
    return this.key;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public T getValue() {
    return this.value;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setKey(final String key) {
    this.key = key;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setValue(final T value) {
    this.value = value;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof KeyValueV1)) return false;
    final KeyValueV1<?> other = (KeyValueV1<?>) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$key = this.getKey();
    final Object other$key = other.getKey();
    if (this$key == null ? other$key != null : !this$key.equals(other$key)) return false;
    final Object this$value = this.getValue();
    final Object other$value = other.getValue();
    if (this$value == null ? other$value != null : !this$value.equals(other$value)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof KeyValueV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $key = this.getKey();
    result = result * PRIME + ($key == null ? 43 : $key.hashCode());
    final Object $value = this.getValue();
    result = result * PRIME + ($value == null ? 43 : $value.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "KeyValueV1(key=" + this.getKey() + ", value=" + this.getValue() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public KeyValueV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public KeyValueV1(final String key, final T value) {
    this.key = key;
    this.value = value;
  }
}
