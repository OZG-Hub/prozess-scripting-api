// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form;

import java.util.ArrayList;
import java.util.List;
import lombok.NonNull;

/**
 * Ein Tab / Element im Medien-Akkordeon.
 *
 * @see MediaAccordionV1
 */
public class MediaAccordionElementV1 {
  /**
   * Titel des Akkordeon-Elements.
   */
  @NonNull
  private String title;
  /**
   * Formularfelder des Akkordeon-Elements.
   */
  @NonNull
  private List<FormFieldV1> fields;

  @SuppressWarnings("all")
  @lombok.Generated
  private static List<FormFieldV1> $default$fields() {
    return new ArrayList<>();
  }


  @SuppressWarnings("all")
  @lombok.Generated
  public static abstract class MediaAccordionElementV1Builder<C extends MediaAccordionElementV1, B extends MediaAccordionElementV1.MediaAccordionElementV1Builder<C, B>> {
    @SuppressWarnings("all")
    @lombok.Generated
    private String title;
    @SuppressWarnings("all")
    @lombok.Generated
    private boolean fields$set;
    @SuppressWarnings("all")
    @lombok.Generated
    private List<FormFieldV1> fields$value;

    /**
     * Titel des Akkordeon-Elements.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public B title(@NonNull final String title) {
      if (title == null) {
        throw new NullPointerException("title is marked non-null but is null");
      }
      this.title = title;
      return self();
    }

    /**
     * Formularfelder des Akkordeon-Elements.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public B fields(@NonNull final List<FormFieldV1> fields) {
      if (fields == null) {
        throw new NullPointerException("fields is marked non-null but is null");
      }
      this.fields$value = fields;
      fields$set = true;
      return self();
    }

    @SuppressWarnings("all")
    @lombok.Generated
    protected abstract B self();

    @SuppressWarnings("all")
    @lombok.Generated
    public abstract C build();

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "MediaAccordionElementV1.MediaAccordionElementV1Builder(title=" + this.title + ", fields$value=" + this.fields$value + ")";
    }
  }


  @SuppressWarnings("all")
  @lombok.Generated
  private static final class MediaAccordionElementV1BuilderImpl extends MediaAccordionElementV1.MediaAccordionElementV1Builder<MediaAccordionElementV1, MediaAccordionElementV1.MediaAccordionElementV1BuilderImpl> {
    @SuppressWarnings("all")
    @lombok.Generated
    private MediaAccordionElementV1BuilderImpl() {
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    protected MediaAccordionElementV1.MediaAccordionElementV1BuilderImpl self() {
      return this;
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public MediaAccordionElementV1 build() {
      return new MediaAccordionElementV1(this);
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected MediaAccordionElementV1(final MediaAccordionElementV1.MediaAccordionElementV1Builder<?, ?> b) {
    this.title = b.title;
    if (title == null) {
      throw new NullPointerException("title is marked non-null but is null");
    }
    if (b.fields$set) this.fields = b.fields$value;
     else this.fields = MediaAccordionElementV1.$default$fields();
    if (fields == null) {
      throw new NullPointerException("fields is marked non-null but is null");
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static MediaAccordionElementV1.MediaAccordionElementV1Builder<?, ?> builder() {
    return new MediaAccordionElementV1.MediaAccordionElementV1BuilderImpl();
  }

  /**
   * Titel des Akkordeon-Elements.
   */
  @NonNull
  @SuppressWarnings("all")
  @lombok.Generated
  public String getTitle() {
    return this.title;
  }

  /**
   * Formularfelder des Akkordeon-Elements.
   */
  @NonNull
  @SuppressWarnings("all")
  @lombok.Generated
  public List<FormFieldV1> getFields() {
    return this.fields;
  }

  /**
   * Titel des Akkordeon-Elements.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setTitle(@NonNull final String title) {
    if (title == null) {
      throw new NullPointerException("title is marked non-null but is null");
    }
    this.title = title;
  }

  /**
   * Formularfelder des Akkordeon-Elements.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setFields(@NonNull final List<FormFieldV1> fields) {
    if (fields == null) {
      throw new NullPointerException("fields is marked non-null but is null");
    }
    this.fields = fields;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof MediaAccordionElementV1)) return false;
    final MediaAccordionElementV1 other = (MediaAccordionElementV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$title = this.getTitle();
    final Object other$title = other.getTitle();
    if (this$title == null ? other$title != null : !this$title.equals(other$title)) return false;
    final Object this$fields = this.getFields();
    final Object other$fields = other.getFields();
    if (this$fields == null ? other$fields != null : !this$fields.equals(other$fields)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof MediaAccordionElementV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $title = this.getTitle();
    result = result * PRIME + ($title == null ? 43 : $title.hashCode());
    final Object $fields = this.getFields();
    result = result * PRIME + ($fields == null ? 43 : $fields.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "MediaAccordionElementV1(title=" + this.getTitle() + ", fields=" + this.getFields() + ")";
  }

  /**
   * Creates a new {@code MediaAccordionElementV1} instance.
   *
   * @param title Titel des Akkordeon-Elements.
   * @param fields Formularfelder des Akkordeon-Elements.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public MediaAccordionElementV1(@NonNull final String title, @NonNull final List<FormFieldV1> fields) {
    if (title == null) {
      throw new NullPointerException("title is marked non-null but is null");
    }
    if (fields == null) {
      throw new NullPointerException("fields is marked non-null but is null");
    }
    this.title = title;
    this.fields = fields;
  }
}
