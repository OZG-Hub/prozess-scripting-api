// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.crypto;

/**
 * Verschlüsselter Wert.
 *
 * @since Release 1.169
 */
public class EncryptedValueV1 {
  /**
   * Die verschlüsselten Daten.
   */
  private byte[] data;
  /**
   * Passwort Salt.
   */
  private byte[] salt;
  /**
   * Initialisierungsvektor (IV).
   */
  private byte[] iv;


  @SuppressWarnings("all")
  public static class EncryptedValueV1Builder {
    @SuppressWarnings("all")
    private byte[] data;
    @SuppressWarnings("all")
    private byte[] salt;
    @SuppressWarnings("all")
    private byte[] iv;

    @SuppressWarnings("all")
    EncryptedValueV1Builder() {
    }

    /**
     * Die verschlüsselten Daten.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public EncryptedValueV1.EncryptedValueV1Builder data(final byte[] data) {
      this.data = data;
      return this;
    }

    /**
     * Passwort Salt.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public EncryptedValueV1.EncryptedValueV1Builder salt(final byte[] salt) {
      this.salt = salt;
      return this;
    }

    /**
     * Initialisierungsvektor (IV).
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public EncryptedValueV1.EncryptedValueV1Builder iv(final byte[] iv) {
      this.iv = iv;
      return this;
    }

    @SuppressWarnings("all")
    public EncryptedValueV1 build() {
      return new EncryptedValueV1(this.data, this.salt, this.iv);
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
      return "EncryptedValueV1.EncryptedValueV1Builder(data=" + java.util.Arrays.toString(this.data) + ", salt=" + java.util.Arrays.toString(this.salt) + ", iv=" + java.util.Arrays.toString(this.iv) + ")";
    }
  }

  @SuppressWarnings("all")
  public static EncryptedValueV1.EncryptedValueV1Builder builder() {
    return new EncryptedValueV1.EncryptedValueV1Builder();
  }

  /**
   * Die verschlüsselten Daten.
   */
  @SuppressWarnings("all")
  public byte[] getData() {
    return this.data;
  }

  /**
   * Passwort Salt.
   */
  @SuppressWarnings("all")
  public byte[] getSalt() {
    return this.salt;
  }

  /**
   * Initialisierungsvektor (IV).
   */
  @SuppressWarnings("all")
  public byte[] getIv() {
    return this.iv;
  }

  /**
   * Die verschlüsselten Daten.
   */
  @SuppressWarnings("all")
  public void setData(final byte[] data) {
    this.data = data;
  }

  /**
   * Passwort Salt.
   */
  @SuppressWarnings("all")
  public void setSalt(final byte[] salt) {
    this.salt = salt;
  }

  /**
   * Initialisierungsvektor (IV).
   */
  @SuppressWarnings("all")
  public void setIv(final byte[] iv) {
    this.iv = iv;
  }

  @Override
  @SuppressWarnings("all")
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof EncryptedValueV1)) return false;
    final EncryptedValueV1 other = (EncryptedValueV1) o;
    if (!other.canEqual((Object) this)) return false;
    if (!java.util.Arrays.equals(this.getData(), other.getData())) return false;
    if (!java.util.Arrays.equals(this.getSalt(), other.getSalt())) return false;
    if (!java.util.Arrays.equals(this.getIv(), other.getIv())) return false;
    return true;
  }

  @SuppressWarnings("all")
  protected boolean canEqual(final Object other) {
    return other instanceof EncryptedValueV1;
  }

  @Override
  @SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + java.util.Arrays.hashCode(this.getData());
    result = result * PRIME + java.util.Arrays.hashCode(this.getSalt());
    result = result * PRIME + java.util.Arrays.hashCode(this.getIv());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  public String toString() {
    return "EncryptedValueV1(data=" + java.util.Arrays.toString(this.getData()) + ", salt=" + java.util.Arrays.toString(this.getSalt()) + ", iv=" + java.util.Arrays.toString(this.getIv()) + ")";
  }

  @SuppressWarnings("all")
  public EncryptedValueV1() {
  }

  @SuppressWarnings("all")
  public EncryptedValueV1(final byte[] data, final byte[] salt, final byte[] iv) {
    this.data = data;
    this.salt = salt;
    this.iv = iv;
  }
}
