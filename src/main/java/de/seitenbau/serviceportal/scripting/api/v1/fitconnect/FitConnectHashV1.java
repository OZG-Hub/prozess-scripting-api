// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.fitconnect;

public class FitConnectHashV1 {
  private FitConnectSignatureTypeV1 signatureType;
  private String content;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class FitConnectHashV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectSignatureTypeV1 signatureType;
    @SuppressWarnings("all")
    @lombok.Generated
    private String content;

    @SuppressWarnings("all")
    @lombok.Generated
    FitConnectHashV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectHashV1.FitConnectHashV1Builder signatureType(final FitConnectSignatureTypeV1 signatureType) {
      this.signatureType = signatureType;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectHashV1.FitConnectHashV1Builder content(final String content) {
      this.content = content;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectHashV1 build() {
      return new FitConnectHashV1(this.signatureType, this.content);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FitConnectHashV1.FitConnectHashV1Builder(signatureType=" + this.signatureType + ", content=" + this.content + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FitConnectHashV1.FitConnectHashV1Builder builder() {
    return new FitConnectHashV1.FitConnectHashV1Builder();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectSignatureTypeV1 getSignatureType() {
    return this.signatureType;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getContent() {
    return this.content;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setSignatureType(final FitConnectSignatureTypeV1 signatureType) {
    this.signatureType = signatureType;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setContent(final String content) {
    this.content = content;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FitConnectHashV1)) return false;
    final FitConnectHashV1 other = (FitConnectHashV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$signatureType = this.getSignatureType();
    final Object other$signatureType = other.getSignatureType();
    if (this$signatureType == null ? other$signatureType != null : !this$signatureType.equals(other$signatureType)) return false;
    final Object this$content = this.getContent();
    final Object other$content = other.getContent();
    if (this$content == null ? other$content != null : !this$content.equals(other$content)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FitConnectHashV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $signatureType = this.getSignatureType();
    result = result * PRIME + ($signatureType == null ? 43 : $signatureType.hashCode());
    final Object $content = this.getContent();
    result = result * PRIME + ($content == null ? 43 : $content.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FitConnectHashV1(signatureType=" + this.getSignatureType() + ", content=" + this.getContent() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectHashV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectHashV1(final FitConnectSignatureTypeV1 signatureType, final String content) {
    this.signatureType = signatureType;
    this.content = content;
  }
}
