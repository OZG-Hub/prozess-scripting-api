// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.fitconnect;

public class FitConnectEmailV1 {
  private String address;
  private Boolean usePgp;
  private String pgpPublicKey;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class FitConnectEmailV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private String address;
    @SuppressWarnings("all")
    @lombok.Generated
    private Boolean usePgp;
    @SuppressWarnings("all")
    @lombok.Generated
    private String pgpPublicKey;

    @SuppressWarnings("all")
    @lombok.Generated
    FitConnectEmailV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectEmailV1.FitConnectEmailV1Builder address(final String address) {
      this.address = address;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectEmailV1.FitConnectEmailV1Builder usePgp(final Boolean usePgp) {
      this.usePgp = usePgp;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectEmailV1.FitConnectEmailV1Builder pgpPublicKey(final String pgpPublicKey) {
      this.pgpPublicKey = pgpPublicKey;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectEmailV1 build() {
      return new FitConnectEmailV1(this.address, this.usePgp, this.pgpPublicKey);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FitConnectEmailV1.FitConnectEmailV1Builder(address=" + this.address + ", usePgp=" + this.usePgp + ", pgpPublicKey=" + this.pgpPublicKey + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FitConnectEmailV1.FitConnectEmailV1Builder builder() {
    return new FitConnectEmailV1.FitConnectEmailV1Builder();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getAddress() {
    return this.address;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public Boolean getUsePgp() {
    return this.usePgp;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getPgpPublicKey() {
    return this.pgpPublicKey;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setAddress(final String address) {
    this.address = address;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setUsePgp(final Boolean usePgp) {
    this.usePgp = usePgp;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setPgpPublicKey(final String pgpPublicKey) {
    this.pgpPublicKey = pgpPublicKey;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FitConnectEmailV1)) return false;
    final FitConnectEmailV1 other = (FitConnectEmailV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$usePgp = this.getUsePgp();
    final Object other$usePgp = other.getUsePgp();
    if (this$usePgp == null ? other$usePgp != null : !this$usePgp.equals(other$usePgp)) return false;
    final Object this$address = this.getAddress();
    final Object other$address = other.getAddress();
    if (this$address == null ? other$address != null : !this$address.equals(other$address)) return false;
    final Object this$pgpPublicKey = this.getPgpPublicKey();
    final Object other$pgpPublicKey = other.getPgpPublicKey();
    if (this$pgpPublicKey == null ? other$pgpPublicKey != null : !this$pgpPublicKey.equals(other$pgpPublicKey)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FitConnectEmailV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $usePgp = this.getUsePgp();
    result = result * PRIME + ($usePgp == null ? 43 : $usePgp.hashCode());
    final Object $address = this.getAddress();
    result = result * PRIME + ($address == null ? 43 : $address.hashCode());
    final Object $pgpPublicKey = this.getPgpPublicKey();
    result = result * PRIME + ($pgpPublicKey == null ? 43 : $pgpPublicKey.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FitConnectEmailV1(address=" + this.getAddress() + ", usePgp=" + this.getUsePgp() + ", pgpPublicKey=" + this.getPgpPublicKey() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectEmailV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectEmailV1(final String address, final Boolean usePgp, final String pgpPublicKey) {
    this.address = address;
    this.usePgp = usePgp;
    this.pgpPublicKey = pgpPublicKey;
  }
}
