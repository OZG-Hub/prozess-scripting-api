// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.fitconnect;

import java.net.URI;

public class FitConnectSubmissionSchemaV1 {
  private URI schemaUri;
  private FitConnectMimeTypeV1 mimeType;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class FitConnectSubmissionSchemaV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private URI schemaUri;
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectMimeTypeV1 mimeType;

    @SuppressWarnings("all")
    @lombok.Generated
    FitConnectSubmissionSchemaV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectSubmissionSchemaV1.FitConnectSubmissionSchemaV1Builder schemaUri(final URI schemaUri) {
      this.schemaUri = schemaUri;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectSubmissionSchemaV1.FitConnectSubmissionSchemaV1Builder mimeType(final FitConnectMimeTypeV1 mimeType) {
      this.mimeType = mimeType;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectSubmissionSchemaV1 build() {
      return new FitConnectSubmissionSchemaV1(this.schemaUri, this.mimeType);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FitConnectSubmissionSchemaV1.FitConnectSubmissionSchemaV1Builder(schemaUri=" + this.schemaUri + ", mimeType=" + this.mimeType + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FitConnectSubmissionSchemaV1.FitConnectSubmissionSchemaV1Builder builder() {
    return new FitConnectSubmissionSchemaV1.FitConnectSubmissionSchemaV1Builder();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public URI getSchemaUri() {
    return this.schemaUri;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectMimeTypeV1 getMimeType() {
    return this.mimeType;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setSchemaUri(final URI schemaUri) {
    this.schemaUri = schemaUri;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setMimeType(final FitConnectMimeTypeV1 mimeType) {
    this.mimeType = mimeType;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FitConnectSubmissionSchemaV1)) return false;
    final FitConnectSubmissionSchemaV1 other = (FitConnectSubmissionSchemaV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$schemaUri = this.getSchemaUri();
    final Object other$schemaUri = other.getSchemaUri();
    if (this$schemaUri == null ? other$schemaUri != null : !this$schemaUri.equals(other$schemaUri)) return false;
    final Object this$mimeType = this.getMimeType();
    final Object other$mimeType = other.getMimeType();
    if (this$mimeType == null ? other$mimeType != null : !this$mimeType.equals(other$mimeType)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FitConnectSubmissionSchemaV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $schemaUri = this.getSchemaUri();
    result = result * PRIME + ($schemaUri == null ? 43 : $schemaUri.hashCode());
    final Object $mimeType = this.getMimeType();
    result = result * PRIME + ($mimeType == null ? 43 : $mimeType.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FitConnectSubmissionSchemaV1(schemaUri=" + this.getSchemaUri() + ", mimeType=" + this.getMimeType() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectSubmissionSchemaV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectSubmissionSchemaV1(final URI schemaUri, final FitConnectMimeTypeV1 mimeType) {
    this.schemaUri = schemaUri;
    this.mimeType = mimeType;
  }
}
