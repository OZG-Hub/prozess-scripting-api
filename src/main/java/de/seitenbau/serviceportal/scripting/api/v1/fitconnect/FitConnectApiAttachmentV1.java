// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.fitconnect;

import java.util.List;
import java.util.UUID;

public class FitConnectApiAttachmentV1 {
  private FitConnectHashV1 hash;
  private FitConnectSignatureV1 signature;
  private FitConnectPurposeV1 purpose;
  private String filename;
  private String description;
  private String mimeType;
  private UUID attachmentId;
  private List<UUID> fragments;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class FitConnectApiAttachmentV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectHashV1 hash;
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectSignatureV1 signature;
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectPurposeV1 purpose;
    @SuppressWarnings("all")
    @lombok.Generated
    private String filename;
    @SuppressWarnings("all")
    @lombok.Generated
    private String description;
    @SuppressWarnings("all")
    @lombok.Generated
    private String mimeType;
    @SuppressWarnings("all")
    @lombok.Generated
    private UUID attachmentId;
    @SuppressWarnings("all")
    @lombok.Generated
    private List<UUID> fragments;

    @SuppressWarnings("all")
    @lombok.Generated
    FitConnectApiAttachmentV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder hash(final FitConnectHashV1 hash) {
      this.hash = hash;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder signature(final FitConnectSignatureV1 signature) {
      this.signature = signature;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder purpose(final FitConnectPurposeV1 purpose) {
      this.purpose = purpose;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder filename(final String filename) {
      this.filename = filename;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder description(final String description) {
      this.description = description;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder mimeType(final String mimeType) {
      this.mimeType = mimeType;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder attachmentId(final UUID attachmentId) {
      this.attachmentId = attachmentId;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder fragments(final List<UUID> fragments) {
      this.fragments = fragments;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectApiAttachmentV1 build() {
      return new FitConnectApiAttachmentV1(this.hash, this.signature, this.purpose, this.filename, this.description, this.mimeType, this.attachmentId, this.fragments);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder(hash=" + this.hash + ", signature=" + this.signature + ", purpose=" + this.purpose + ", filename=" + this.filename + ", description=" + this.description + ", mimeType=" + this.mimeType + ", attachmentId=" + this.attachmentId + ", fragments=" + this.fragments + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder builder() {
    return new FitConnectApiAttachmentV1.FitConnectApiAttachmentV1Builder();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectHashV1 getHash() {
    return this.hash;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectSignatureV1 getSignature() {
    return this.signature;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectPurposeV1 getPurpose() {
    return this.purpose;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getFilename() {
    return this.filename;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getDescription() {
    return this.description;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getMimeType() {
    return this.mimeType;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public UUID getAttachmentId() {
    return this.attachmentId;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public List<UUID> getFragments() {
    return this.fragments;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setHash(final FitConnectHashV1 hash) {
    this.hash = hash;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setSignature(final FitConnectSignatureV1 signature) {
    this.signature = signature;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setPurpose(final FitConnectPurposeV1 purpose) {
    this.purpose = purpose;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setFilename(final String filename) {
    this.filename = filename;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setDescription(final String description) {
    this.description = description;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setMimeType(final String mimeType) {
    this.mimeType = mimeType;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setAttachmentId(final UUID attachmentId) {
    this.attachmentId = attachmentId;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setFragments(final List<UUID> fragments) {
    this.fragments = fragments;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FitConnectApiAttachmentV1)) return false;
    final FitConnectApiAttachmentV1 other = (FitConnectApiAttachmentV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$hash = this.getHash();
    final Object other$hash = other.getHash();
    if (this$hash == null ? other$hash != null : !this$hash.equals(other$hash)) return false;
    final Object this$signature = this.getSignature();
    final Object other$signature = other.getSignature();
    if (this$signature == null ? other$signature != null : !this$signature.equals(other$signature)) return false;
    final Object this$purpose = this.getPurpose();
    final Object other$purpose = other.getPurpose();
    if (this$purpose == null ? other$purpose != null : !this$purpose.equals(other$purpose)) return false;
    final Object this$filename = this.getFilename();
    final Object other$filename = other.getFilename();
    if (this$filename == null ? other$filename != null : !this$filename.equals(other$filename)) return false;
    final Object this$description = this.getDescription();
    final Object other$description = other.getDescription();
    if (this$description == null ? other$description != null : !this$description.equals(other$description)) return false;
    final Object this$mimeType = this.getMimeType();
    final Object other$mimeType = other.getMimeType();
    if (this$mimeType == null ? other$mimeType != null : !this$mimeType.equals(other$mimeType)) return false;
    final Object this$attachmentId = this.getAttachmentId();
    final Object other$attachmentId = other.getAttachmentId();
    if (this$attachmentId == null ? other$attachmentId != null : !this$attachmentId.equals(other$attachmentId)) return false;
    final Object this$fragments = this.getFragments();
    final Object other$fragments = other.getFragments();
    if (this$fragments == null ? other$fragments != null : !this$fragments.equals(other$fragments)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FitConnectApiAttachmentV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $hash = this.getHash();
    result = result * PRIME + ($hash == null ? 43 : $hash.hashCode());
    final Object $signature = this.getSignature();
    result = result * PRIME + ($signature == null ? 43 : $signature.hashCode());
    final Object $purpose = this.getPurpose();
    result = result * PRIME + ($purpose == null ? 43 : $purpose.hashCode());
    final Object $filename = this.getFilename();
    result = result * PRIME + ($filename == null ? 43 : $filename.hashCode());
    final Object $description = this.getDescription();
    result = result * PRIME + ($description == null ? 43 : $description.hashCode());
    final Object $mimeType = this.getMimeType();
    result = result * PRIME + ($mimeType == null ? 43 : $mimeType.hashCode());
    final Object $attachmentId = this.getAttachmentId();
    result = result * PRIME + ($attachmentId == null ? 43 : $attachmentId.hashCode());
    final Object $fragments = this.getFragments();
    result = result * PRIME + ($fragments == null ? 43 : $fragments.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FitConnectApiAttachmentV1(hash=" + this.getHash() + ", signature=" + this.getSignature() + ", purpose=" + this.getPurpose() + ", filename=" + this.getFilename() + ", description=" + this.getDescription() + ", mimeType=" + this.getMimeType() + ", attachmentId=" + this.getAttachmentId() + ", fragments=" + this.getFragments() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectApiAttachmentV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectApiAttachmentV1(final FitConnectHashV1 hash, final FitConnectSignatureV1 signature, final FitConnectPurposeV1 purpose, final String filename, final String description, final String mimeType, final UUID attachmentId, final List<UUID> fragments) {
    this.hash = hash;
    this.signature = signature;
    this.purpose = purpose;
    this.filename = filename;
    this.description = description;
    this.mimeType = mimeType;
    this.attachmentId = attachmentId;
    this.fragments = fragments;
  }
}
