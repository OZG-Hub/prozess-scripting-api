// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.process;

/**
 * Region für die eine Organisationseinheit zuständig ist.
 */
public class ProcessOrganisationseinheitRegionV1 {
  /**
   * ID der im AdminCenter gepflegten Region.
   */
  private Long id;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class ProcessOrganisationseinheitRegionV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private Long id;

    @SuppressWarnings("all")
    @lombok.Generated
    ProcessOrganisationseinheitRegionV1Builder() {
    }

    /**
     * ID der im AdminCenter gepflegten Region.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitRegionV1.ProcessOrganisationseinheitRegionV1Builder id(final Long id) {
      this.id = id;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public ProcessOrganisationseinheitRegionV1 build() {
      return new ProcessOrganisationseinheitRegionV1(this.id);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "ProcessOrganisationseinheitRegionV1.ProcessOrganisationseinheitRegionV1Builder(id=" + this.id + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static ProcessOrganisationseinheitRegionV1.ProcessOrganisationseinheitRegionV1Builder builder() {
    return new ProcessOrganisationseinheitRegionV1.ProcessOrganisationseinheitRegionV1Builder();
  }

  /**
   * ID der im AdminCenter gepflegten Region.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public Long getId() {
    return this.id;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "ProcessOrganisationseinheitRegionV1(id=" + this.getId() + ")";
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof ProcessOrganisationseinheitRegionV1)) return false;
    final ProcessOrganisationseinheitRegionV1 other = (ProcessOrganisationseinheitRegionV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$id = this.getId();
    final Object other$id = other.getId();
    if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof ProcessOrganisationseinheitRegionV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $id = this.getId();
    result = result * PRIME + ($id == null ? 43 : $id.hashCode());
    return result;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public ProcessOrganisationseinheitRegionV1() {
  }

  /**
   * Creates a new {@code ProcessOrganisationseinheitRegionV1} instance.
   *
   * @param id ID der im AdminCenter gepflegten Region.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ProcessOrganisationseinheitRegionV1(final Long id) {
    this.id = id;
  }
}
