// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.register;

/**
 * Dieses Objekt ist experimentell und kann sich noch ver√§ndern!
 * Daten, die aus dem Register abgefragt wurden
 */
public class RegisterItemV1 {
  private String mimeType;
  private byte[] data;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class RegisterItemV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private String mimeType;
    @SuppressWarnings("all")
    @lombok.Generated
    private byte[] data;

    @SuppressWarnings("all")
    @lombok.Generated
    RegisterItemV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public RegisterItemV1.RegisterItemV1Builder mimeType(final String mimeType) {
      this.mimeType = mimeType;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public RegisterItemV1.RegisterItemV1Builder data(final byte[] data) {
      this.data = data;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public RegisterItemV1 build() {
      return new RegisterItemV1(this.mimeType, this.data);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "RegisterItemV1.RegisterItemV1Builder(mimeType=" + this.mimeType + ", data=" + java.util.Arrays.toString(this.data) + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static RegisterItemV1.RegisterItemV1Builder builder() {
    return new RegisterItemV1.RegisterItemV1Builder();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getMimeType() {
    return this.mimeType;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public byte[] getData() {
    return this.data;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setMimeType(final String mimeType) {
    this.mimeType = mimeType;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setData(final byte[] data) {
    this.data = data;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof RegisterItemV1)) return false;
    final RegisterItemV1 other = (RegisterItemV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$mimeType = this.getMimeType();
    final Object other$mimeType = other.getMimeType();
    if (this$mimeType == null ? other$mimeType != null : !this$mimeType.equals(other$mimeType)) return false;
    if (!java.util.Arrays.equals(this.getData(), other.getData())) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof RegisterItemV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $mimeType = this.getMimeType();
    result = result * PRIME + ($mimeType == null ? 43 : $mimeType.hashCode());
    result = result * PRIME + java.util.Arrays.hashCode(this.getData());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "RegisterItemV1(mimeType=" + this.getMimeType() + ", data=" + java.util.Arrays.toString(this.getData()) + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public RegisterItemV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public RegisterItemV1(final String mimeType, final byte[] data) {
    this.mimeType = mimeType;
    this.data = data;
  }
}
