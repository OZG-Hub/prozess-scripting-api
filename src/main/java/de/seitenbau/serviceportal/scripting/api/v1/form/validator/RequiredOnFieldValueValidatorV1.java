// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.form.validator;

import java.util.Set;

/**
 * Validierungsregel, die das Feld zum Pflichtfeld macht, wenn ein referenziertes
 * Feld einen Wert hat, der Teil einer definierten Menge von Werten ist.
 */
public class RequiredOnFieldValueValidatorV1 extends ConditionalFieldValidationRuleV1 {
  /**
   * Werte des referenzierten Feldes, bei denen das Feld zum Pflichtfeld wird.
   */
  private Set<Object> values;


  @SuppressWarnings("all")
  public static abstract class RequiredOnFieldValueValidatorV1Builder<C extends RequiredOnFieldValueValidatorV1, B extends RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1Builder<C, B>> extends ConditionalFieldValidationRuleV1.ConditionalFieldValidationRuleV1Builder<C, B> {
    @SuppressWarnings("all")
    private Set<Object> values;

    /**
     * Werte des referenzierten Feldes, bei denen das Feld zum Pflichtfeld wird.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public B values(final Set<Object> values) {
      this.values = values;
      return self();
    }

    @Override
    @SuppressWarnings("all")
    protected abstract B self();

    @Override
    @SuppressWarnings("all")
    public abstract C build();

    @Override
    @SuppressWarnings("all")
    public String toString() {
      return "RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1Builder(super=" + super.toString() + ", values=" + this.values + ")";
    }
  }


  @SuppressWarnings("all")
  private static final class RequiredOnFieldValueValidatorV1BuilderImpl extends RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1Builder<RequiredOnFieldValueValidatorV1, RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1BuilderImpl> {
    @SuppressWarnings("all")
    private RequiredOnFieldValueValidatorV1BuilderImpl() {
    }

    @Override
    @SuppressWarnings("all")
    protected RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1BuilderImpl self() {
      return this;
    }

    @Override
    @SuppressWarnings("all")
    public RequiredOnFieldValueValidatorV1 build() {
      return new RequiredOnFieldValueValidatorV1(this);
    }
  }

  @SuppressWarnings("all")
  protected RequiredOnFieldValueValidatorV1(final RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1Builder<?, ?> b) {
    super(b);
    this.values = b.values;
  }

  @SuppressWarnings("all")
  public static RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1Builder<?, ?> builder() {
    return new RequiredOnFieldValueValidatorV1.RequiredOnFieldValueValidatorV1BuilderImpl();
  }

  /**
   * Werte des referenzierten Feldes, bei denen das Feld zum Pflichtfeld wird.
   */
  @SuppressWarnings("all")
  public Set<Object> getValues() {
    return this.values;
  }

  /**
   * Werte des referenzierten Feldes, bei denen das Feld zum Pflichtfeld wird.
   */
  @SuppressWarnings("all")
  public void setValues(final Set<Object> values) {
    this.values = values;
  }

  @Override
  @SuppressWarnings("all")
  public String toString() {
    return "RequiredOnFieldValueValidatorV1(values=" + this.getValues() + ")";
  }

  @Override
  @SuppressWarnings("all")
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof RequiredOnFieldValueValidatorV1)) return false;
    final RequiredOnFieldValueValidatorV1 other = (RequiredOnFieldValueValidatorV1) o;
    if (!other.canEqual((Object) this)) return false;
    if (!super.equals(o)) return false;
    final Object this$values = this.getValues();
    final Object other$values = other.getValues();
    if (this$values == null ? other$values != null : !this$values.equals(other$values)) return false;
    return true;
  }

  @SuppressWarnings("all")
  protected boolean canEqual(final Object other) {
    return other instanceof RequiredOnFieldValueValidatorV1;
  }

  @Override
  @SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = super.hashCode();
    final Object $values = this.getValues();
    result = result * PRIME + ($values == null ? 43 : $values.hashCode());
    return result;
  }
}
