// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.payment;

/**
 * Informationen über die Projekte der möglichen Bezahlmethoden bei GiroCheckout.
 */
public class GiroCheckoutProjectV1 {
  /**
   * project-Id des Bezahlverfahrens.
   */
  private int id;
  /**
   * project-secret zur Erzeugung des Hashes.
   */
  private String secret;
  /**
   * Bezahlart des Projekts.
   */
  private GiroCheckoutPaymentMethodV1 paymentMethod;


  @SuppressWarnings("all")
  public static class GiroCheckoutProjectV1Builder {
    @SuppressWarnings("all")
    private int id;
    @SuppressWarnings("all")
    private String secret;
    @SuppressWarnings("all")
    private GiroCheckoutPaymentMethodV1 paymentMethod;

    @SuppressWarnings("all")
    GiroCheckoutProjectV1Builder() {
    }

    /**
     * project-Id des Bezahlverfahrens.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public GiroCheckoutProjectV1.GiroCheckoutProjectV1Builder id(final int id) {
      this.id = id;
      return this;
    }

    /**
     * project-secret zur Erzeugung des Hashes.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public GiroCheckoutProjectV1.GiroCheckoutProjectV1Builder secret(final String secret) {
      this.secret = secret;
      return this;
    }

    /**
     * Bezahlart des Projekts.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    public GiroCheckoutProjectV1.GiroCheckoutProjectV1Builder paymentMethod(final GiroCheckoutPaymentMethodV1 paymentMethod) {
      this.paymentMethod = paymentMethod;
      return this;
    }

    @SuppressWarnings("all")
    public GiroCheckoutProjectV1 build() {
      return new GiroCheckoutProjectV1(this.id, this.secret, this.paymentMethod);
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
      return "GiroCheckoutProjectV1.GiroCheckoutProjectV1Builder(id=" + this.id + ", secret=" + this.secret + ", paymentMethod=" + this.paymentMethod + ")";
    }
  }

  @SuppressWarnings("all")
  public static GiroCheckoutProjectV1.GiroCheckoutProjectV1Builder builder() {
    return new GiroCheckoutProjectV1.GiroCheckoutProjectV1Builder();
  }

  /**
   * project-Id des Bezahlverfahrens.
   */
  @SuppressWarnings("all")
  public int getId() {
    return this.id;
  }

  /**
   * project-secret zur Erzeugung des Hashes.
   */
  @SuppressWarnings("all")
  public String getSecret() {
    return this.secret;
  }

  /**
   * Bezahlart des Projekts.
   */
  @SuppressWarnings("all")
  public GiroCheckoutPaymentMethodV1 getPaymentMethod() {
    return this.paymentMethod;
  }

  /**
   * project-Id des Bezahlverfahrens.
   */
  @SuppressWarnings("all")
  public void setId(final int id) {
    this.id = id;
  }

  /**
   * project-secret zur Erzeugung des Hashes.
   */
  @SuppressWarnings("all")
  public void setSecret(final String secret) {
    this.secret = secret;
  }

  /**
   * Bezahlart des Projekts.
   */
  @SuppressWarnings("all")
  public void setPaymentMethod(final GiroCheckoutPaymentMethodV1 paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  @Override
  @SuppressWarnings("all")
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof GiroCheckoutProjectV1)) return false;
    final GiroCheckoutProjectV1 other = (GiroCheckoutProjectV1) o;
    if (!other.canEqual((Object) this)) return false;
    if (this.getId() != other.getId()) return false;
    final Object this$secret = this.getSecret();
    final Object other$secret = other.getSecret();
    if (this$secret == null ? other$secret != null : !this$secret.equals(other$secret)) return false;
    final Object this$paymentMethod = this.getPaymentMethod();
    final Object other$paymentMethod = other.getPaymentMethod();
    if (this$paymentMethod == null ? other$paymentMethod != null : !this$paymentMethod.equals(other$paymentMethod)) return false;
    return true;
  }

  @SuppressWarnings("all")
  protected boolean canEqual(final Object other) {
    return other instanceof GiroCheckoutProjectV1;
  }

  @Override
  @SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + this.getId();
    final Object $secret = this.getSecret();
    result = result * PRIME + ($secret == null ? 43 : $secret.hashCode());
    final Object $paymentMethod = this.getPaymentMethod();
    result = result * PRIME + ($paymentMethod == null ? 43 : $paymentMethod.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  public String toString() {
    return "GiroCheckoutProjectV1(id=" + this.getId() + ", secret=" + this.getSecret() + ", paymentMethod=" + this.getPaymentMethod() + ")";
  }

  @SuppressWarnings("all")
  public GiroCheckoutProjectV1() {
  }

  @SuppressWarnings("all")
  public GiroCheckoutProjectV1(final int id, final String secret, final GiroCheckoutPaymentMethodV1 paymentMethod) {
    this.id = id;
    this.secret = secret;
    this.paymentMethod = paymentMethod;
  }
}
