// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.fitconnect;

import java.net.URI;

public class FitConnectPaymentInformationV1 {
  private URI transactionUrl;
  private String transactionId;
  private String transactionReference;
  private String transactionTimestamp;
  private FitConnectPaymentMethodV1 paymentMethod;
  private String paymentMethodDetail;
  private FitConnectPaymentStatusV1 status;
  private double grossAmount;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class FitConnectPaymentInformationV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private URI transactionUrl;
    @SuppressWarnings("all")
    @lombok.Generated
    private String transactionId;
    @SuppressWarnings("all")
    @lombok.Generated
    private String transactionReference;
    @SuppressWarnings("all")
    @lombok.Generated
    private String transactionTimestamp;
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectPaymentMethodV1 paymentMethod;
    @SuppressWarnings("all")
    @lombok.Generated
    private String paymentMethodDetail;
    @SuppressWarnings("all")
    @lombok.Generated
    private FitConnectPaymentStatusV1 status;
    @SuppressWarnings("all")
    @lombok.Generated
    private double grossAmount;

    @SuppressWarnings("all")
    @lombok.Generated
    FitConnectPaymentInformationV1Builder() {
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder transactionUrl(final URI transactionUrl) {
      this.transactionUrl = transactionUrl;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder transactionId(final String transactionId) {
      this.transactionId = transactionId;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder transactionReference(final String transactionReference) {
      this.transactionReference = transactionReference;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder transactionTimestamp(final String transactionTimestamp) {
      this.transactionTimestamp = transactionTimestamp;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder paymentMethod(final FitConnectPaymentMethodV1 paymentMethod) {
      this.paymentMethod = paymentMethod;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder paymentMethodDetail(final String paymentMethodDetail) {
      this.paymentMethodDetail = paymentMethodDetail;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder status(final FitConnectPaymentStatusV1 status) {
      this.status = status;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder grossAmount(final double grossAmount) {
      this.grossAmount = grossAmount;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public FitConnectPaymentInformationV1 build() {
      return new FitConnectPaymentInformationV1(this.transactionUrl, this.transactionId, this.transactionReference, this.transactionTimestamp, this.paymentMethod, this.paymentMethodDetail, this.status, this.grossAmount);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder(transactionUrl=" + this.transactionUrl + ", transactionId=" + this.transactionId + ", transactionReference=" + this.transactionReference + ", transactionTimestamp=" + this.transactionTimestamp + ", paymentMethod=" + this.paymentMethod + ", paymentMethodDetail=" + this.paymentMethodDetail + ", status=" + this.status + ", grossAmount=" + this.grossAmount + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder builder() {
    return new FitConnectPaymentInformationV1.FitConnectPaymentInformationV1Builder();
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public URI getTransactionUrl() {
    return this.transactionUrl;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getTransactionId() {
    return this.transactionId;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getTransactionReference() {
    return this.transactionReference;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getTransactionTimestamp() {
    return this.transactionTimestamp;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectPaymentMethodV1 getPaymentMethod() {
    return this.paymentMethod;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public String getPaymentMethodDetail() {
    return this.paymentMethodDetail;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectPaymentStatusV1 getStatus() {
    return this.status;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public double getGrossAmount() {
    return this.grossAmount;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setTransactionUrl(final URI transactionUrl) {
    this.transactionUrl = transactionUrl;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setTransactionId(final String transactionId) {
    this.transactionId = transactionId;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setTransactionReference(final String transactionReference) {
    this.transactionReference = transactionReference;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setTransactionTimestamp(final String transactionTimestamp) {
    this.transactionTimestamp = transactionTimestamp;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setPaymentMethod(final FitConnectPaymentMethodV1 paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setPaymentMethodDetail(final String paymentMethodDetail) {
    this.paymentMethodDetail = paymentMethodDetail;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setStatus(final FitConnectPaymentStatusV1 status) {
    this.status = status;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public void setGrossAmount(final double grossAmount) {
    this.grossAmount = grossAmount;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof FitConnectPaymentInformationV1)) return false;
    final FitConnectPaymentInformationV1 other = (FitConnectPaymentInformationV1) o;
    if (!other.canEqual((Object) this)) return false;
    if (Double.compare(this.getGrossAmount(), other.getGrossAmount()) != 0) return false;
    final Object this$transactionUrl = this.getTransactionUrl();
    final Object other$transactionUrl = other.getTransactionUrl();
    if (this$transactionUrl == null ? other$transactionUrl != null : !this$transactionUrl.equals(other$transactionUrl)) return false;
    final Object this$transactionId = this.getTransactionId();
    final Object other$transactionId = other.getTransactionId();
    if (this$transactionId == null ? other$transactionId != null : !this$transactionId.equals(other$transactionId)) return false;
    final Object this$transactionReference = this.getTransactionReference();
    final Object other$transactionReference = other.getTransactionReference();
    if (this$transactionReference == null ? other$transactionReference != null : !this$transactionReference.equals(other$transactionReference)) return false;
    final Object this$transactionTimestamp = this.getTransactionTimestamp();
    final Object other$transactionTimestamp = other.getTransactionTimestamp();
    if (this$transactionTimestamp == null ? other$transactionTimestamp != null : !this$transactionTimestamp.equals(other$transactionTimestamp)) return false;
    final Object this$paymentMethod = this.getPaymentMethod();
    final Object other$paymentMethod = other.getPaymentMethod();
    if (this$paymentMethod == null ? other$paymentMethod != null : !this$paymentMethod.equals(other$paymentMethod)) return false;
    final Object this$paymentMethodDetail = this.getPaymentMethodDetail();
    final Object other$paymentMethodDetail = other.getPaymentMethodDetail();
    if (this$paymentMethodDetail == null ? other$paymentMethodDetail != null : !this$paymentMethodDetail.equals(other$paymentMethodDetail)) return false;
    final Object this$status = this.getStatus();
    final Object other$status = other.getStatus();
    if (this$status == null ? other$status != null : !this$status.equals(other$status)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof FitConnectPaymentInformationV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final long $grossAmount = Double.doubleToLongBits(this.getGrossAmount());
    result = result * PRIME + (int) ($grossAmount >>> 32 ^ $grossAmount);
    final Object $transactionUrl = this.getTransactionUrl();
    result = result * PRIME + ($transactionUrl == null ? 43 : $transactionUrl.hashCode());
    final Object $transactionId = this.getTransactionId();
    result = result * PRIME + ($transactionId == null ? 43 : $transactionId.hashCode());
    final Object $transactionReference = this.getTransactionReference();
    result = result * PRIME + ($transactionReference == null ? 43 : $transactionReference.hashCode());
    final Object $transactionTimestamp = this.getTransactionTimestamp();
    result = result * PRIME + ($transactionTimestamp == null ? 43 : $transactionTimestamp.hashCode());
    final Object $paymentMethod = this.getPaymentMethod();
    result = result * PRIME + ($paymentMethod == null ? 43 : $paymentMethod.hashCode());
    final Object $paymentMethodDetail = this.getPaymentMethodDetail();
    result = result * PRIME + ($paymentMethodDetail == null ? 43 : $paymentMethodDetail.hashCode());
    final Object $status = this.getStatus();
    result = result * PRIME + ($status == null ? 43 : $status.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "FitConnectPaymentInformationV1(transactionUrl=" + this.getTransactionUrl() + ", transactionId=" + this.getTransactionId() + ", transactionReference=" + this.getTransactionReference() + ", transactionTimestamp=" + this.getTransactionTimestamp() + ", paymentMethod=" + this.getPaymentMethod() + ", paymentMethodDetail=" + this.getPaymentMethodDetail() + ", status=" + this.getStatus() + ", grossAmount=" + this.getGrossAmount() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectPaymentInformationV1() {
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public FitConnectPaymentInformationV1(final URI transactionUrl, final String transactionId, final String transactionReference, final String transactionTimestamp, final FitConnectPaymentMethodV1 paymentMethod, final String paymentMethodDetail, final FitConnectPaymentStatusV1 status, final double grossAmount) {
    this.transactionUrl = transactionUrl;
    this.transactionId = transactionId;
    this.transactionReference = transactionReference;
    this.transactionTimestamp = transactionTimestamp;
    this.paymentMethod = paymentMethod;
    this.paymentMethodDetail = paymentMethodDetail;
    this.status = status;
    this.grossAmount = grossAmount;
  }
}
