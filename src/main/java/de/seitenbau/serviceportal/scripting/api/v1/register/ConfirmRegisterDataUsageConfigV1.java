// Generated by delombok
package de.seitenbau.serviceportal.scripting.api.v1.register;

/**
 * Dieses Objekt ist experimentell und kann sich noch verändern!
 * Objekt mit den Texten der Ansicht zur Bestätigung der Verwendung des Nachweises im Task.
 */
public class ConfirmRegisterDataUsageConfigV1 {
  /**
   * Beschreibung zur Verwendung des Nachweises im Task.
   */
  private String displayedDescription;
  /**
   * Überschrift zum abgerufenen Nachweis.
   */
  private String displayedRegisterDataTitle;


  @SuppressWarnings("all")
  @lombok.Generated
  public static class ConfirmRegisterDataUsageConfigV1Builder {
    @SuppressWarnings("all")
    @lombok.Generated
    private String displayedDescription;
    @SuppressWarnings("all")
    @lombok.Generated
    private String displayedRegisterDataTitle;

    @SuppressWarnings("all")
    @lombok.Generated
    ConfirmRegisterDataUsageConfigV1Builder() {
    }

    /**
     * Beschreibung zur Verwendung des Nachweises im Task.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmRegisterDataUsageConfigV1.ConfirmRegisterDataUsageConfigV1Builder displayedDescription(final String displayedDescription) {
      this.displayedDescription = displayedDescription;
      return this;
    }

    /**
     * Überschrift zum abgerufenen Nachweis.
     * @return {@code this}.
     */
    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmRegisterDataUsageConfigV1.ConfirmRegisterDataUsageConfigV1Builder displayedRegisterDataTitle(final String displayedRegisterDataTitle) {
      this.displayedRegisterDataTitle = displayedRegisterDataTitle;
      return this;
    }

    @SuppressWarnings("all")
    @lombok.Generated
    public ConfirmRegisterDataUsageConfigV1 build() {
      return new ConfirmRegisterDataUsageConfigV1(this.displayedDescription, this.displayedRegisterDataTitle);
    }

    @Override
    @SuppressWarnings("all")
    @lombok.Generated
    public String toString() {
      return "ConfirmRegisterDataUsageConfigV1.ConfirmRegisterDataUsageConfigV1Builder(displayedDescription=" + this.displayedDescription + ", displayedRegisterDataTitle=" + this.displayedRegisterDataTitle + ")";
    }
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public static ConfirmRegisterDataUsageConfigV1.ConfirmRegisterDataUsageConfigV1Builder builder() {
    return new ConfirmRegisterDataUsageConfigV1.ConfirmRegisterDataUsageConfigV1Builder();
  }

  /**
   * Beschreibung zur Verwendung des Nachweises im Task.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getDisplayedDescription() {
    return this.displayedDescription;
  }

  /**
   * Überschrift zum abgerufenen Nachweis.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public String getDisplayedRegisterDataTitle() {
    return this.displayedRegisterDataTitle;
  }

  /**
   * Beschreibung zur Verwendung des Nachweises im Task.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setDisplayedDescription(final String displayedDescription) {
    this.displayedDescription = displayedDescription;
  }

  /**
   * Überschrift zum abgerufenen Nachweis.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public void setDisplayedRegisterDataTitle(final String displayedRegisterDataTitle) {
    this.displayedRegisterDataTitle = displayedRegisterDataTitle;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof ConfirmRegisterDataUsageConfigV1)) return false;
    final ConfirmRegisterDataUsageConfigV1 other = (ConfirmRegisterDataUsageConfigV1) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$displayedDescription = this.getDisplayedDescription();
    final Object other$displayedDescription = other.getDisplayedDescription();
    if (this$displayedDescription == null ? other$displayedDescription != null : !this$displayedDescription.equals(other$displayedDescription)) return false;
    final Object this$displayedRegisterDataTitle = this.getDisplayedRegisterDataTitle();
    final Object other$displayedRegisterDataTitle = other.getDisplayedRegisterDataTitle();
    if (this$displayedRegisterDataTitle == null ? other$displayedRegisterDataTitle != null : !this$displayedRegisterDataTitle.equals(other$displayedRegisterDataTitle)) return false;
    return true;
  }

  @SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final Object other) {
    return other instanceof ConfirmRegisterDataUsageConfigV1;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $displayedDescription = this.getDisplayedDescription();
    result = result * PRIME + ($displayedDescription == null ? 43 : $displayedDescription.hashCode());
    final Object $displayedRegisterDataTitle = this.getDisplayedRegisterDataTitle();
    result = result * PRIME + ($displayedRegisterDataTitle == null ? 43 : $displayedRegisterDataTitle.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  @lombok.Generated
  public String toString() {
    return "ConfirmRegisterDataUsageConfigV1(displayedDescription=" + this.getDisplayedDescription() + ", displayedRegisterDataTitle=" + this.getDisplayedRegisterDataTitle() + ")";
  }

  @SuppressWarnings("all")
  @lombok.Generated
  public ConfirmRegisterDataUsageConfigV1() {
  }

  /**
   * Creates a new {@code ConfirmRegisterDataUsageConfigV1} instance.
   *
   * @param displayedDescription Beschreibung zur Verwendung des Nachweises im Task.
   * @param displayedRegisterDataTitle Überschrift zum abgerufenen Nachweis.
   */
  @SuppressWarnings("all")
  @lombok.Generated
  public ConfirmRegisterDataUsageConfigV1(final String displayedDescription, final String displayedRegisterDataTitle) {
    this.displayedDescription = displayedDescription;
    this.displayedRegisterDataTitle = displayedRegisterDataTitle;
  }
}
